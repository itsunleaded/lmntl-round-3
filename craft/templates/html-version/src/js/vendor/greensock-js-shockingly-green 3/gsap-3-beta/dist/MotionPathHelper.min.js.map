{"version":3,"file":"MotionPathHelper.min.js","sources":["../src/utils/paths.js","../src/utils/matrix.js","../src/utils/PathEditor.js","../src/MotionPathHelper.js"],"sourcesContent":["/*!\n * paths 3.0.0\n * https://greensock.com\n *\n * Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_DEG2RAD = Math.PI / 180,\n\t_RAD2DEG = 180 / Math.PI,\n\t_sin = Math.sin,\n\t_cos = Math.cos,\n\t_abs = Math.abs,\n\t_sqrt = Math.sqrt,\n\t_atan2 = Math.atan2,\n\t_largeNum = 1e8,\n\t_isString = value => typeof(value) === \"string\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isUndefined = value => typeof(value) === \"undefined\",\n\t_temp = {},\n\t_temp2 = {},\n\t_roundingNum = 1e5,\n\t_wrapProgress = progress => (Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum) || ((progress < 0) ? 0 : 1), //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it's negative because it makes more sense for motion to end at 0 in that case.\n\t_round = value =>  ~~(value * _roundingNum + (value < 0 ? -.5 : .5)) / _roundingNum,\n\t_splitSegment = (rawPath, segIndex, i, t) => {\n\t\tlet segment = rawPath[segIndex],\n\t\t\tshift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\t\tif (shift && shift + i + 2 < segment.length) {\n\t\t\trawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n\t\t\tsegment.splice(0, i + shift);\n\t\t\treturn 1;\n\t\t}\n\t},\n\t_reverseRawPath = (rawPath, skipOuter) => {\n\t\tlet i = rawPath.length;\n\t\tif (!skipOuter) {\n\t\t\trawPath.reverse();\n\t\t}\n\t\twhile (i--) {\n\t\t\tif (!rawPath[i].reversed) {\n\t\t\t\treverseSegment(rawPath[i]);\n\t\t\t}\n\t\t}\n\t},\n\t_copyMetaData = (source, copy) => {\n\t\tcopy.totalLength = source.totalLength;\n\t\tif (source.samples) { //segment\n\t\t\tcopy.samples = source.samples.slice(0);\n\t\t\tcopy.lookup = source.lookup.slice(0);\n\t\t\tcopy.minLength = source.minLength;\n\t\t\tcopy.resolution = source.resolution;\n\t\t} else { //rawPath\n\t\t\tcopy.totalPoints = source.totalPoints;\n\t\t}\n\t\treturn copy;\n\t},\n\t//pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it'll merge it into that same segment (to reduce the number of segments)\n\t_appendOrMerge = (rawPath, segment) => {\n\t\tlet index = rawPath.length,\n\t\t\tprevSeg = rawPath[index - 1] || [],\n\t\t\tl = prevSeg.length;\n\t\tif (segment[0] === prevSeg[l-2] && segment[1] === prevSeg[l-1]) {\n\t\t\tsegment = prevSeg.concat(segment.slice(2));\n\t\t\tindex--;\n\t\t}\n\t\trawPath[index] = segment;\n\t},\n\t_bestDistance;\n\n/* TERMINOLOGY\n - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple \"M\" commands, defining Segments (paths aren't always connected).\n - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.\n - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.\n - the variable \"t\" is typically the position along an individual Bezier path (time) and it's NOT linear, meaning it could accelerate/decelerate based on the control points whereas the \"p\" or \"progress\" value is linearly mapped to the whole path, so it shouldn't really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. \"t\" is ONLY in an individual Bezier piece.\n */\n\n//accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it'll also cache the value so that if it's queried again, it'll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn't changed - it'll check).\nexport function getRawPath(value) {\n\tvalue = (_isString(value) && _selectorExp.test(value)) ? document.querySelector(value) || value : value;\n\tlet e = value.getAttribute ? value : 0,\n\t\trawPath;\n\tif (e && (value = value.getAttribute(\"d\"))) {\n\t\t//implements caching\n\t\tif (!e._gsPath) {\n\t\t\te._gsPath = {};\n\t\t}\n\t\trawPath = e._gsPath[value];\n\t\treturn (rawPath && !rawPath._dirty) ? rawPath : (e._gsPath[value] = stringToRawPath(value));\n\t}\n\treturn !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : (_isNumber(value[0])) ? [value] : value;\n}\n\n//copies a RawPath WITHOUT the length meta data (for speed)\nexport function copyRawPath(rawPath) {\n\tlet a = [],\n\t\ti = 0;\n\tfor (; i < rawPath.length; i++) {\n\t\ta[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n\t}\n\treturn _copyMetaData(rawPath, a);\n}\n\nexport function reverseSegment(segment) {\n\tlet i = 0,\n\t\ty;\n\tsegment.reverse(); //this will invert the order y, x, y, x so we must flip it back.\n\tfor (; i < segment.length; i += 2) {\n\t\ty = segment[i];\n\t\tsegment[i] = segment[i+1];\n\t\tsegment[i+1] = y;\n\t}\n\tsegment.reversed = !segment.reversed;\n}\n\n\n\nlet _createPath = (e, ignore) => {\n\t\tlet path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n\t\t\tattr = [].slice.call(e.attributes),\n\t\t\ti = attr.length,\n\t\t\tname;\n\t\tignore = \",\" + ignore + \",\";\n\t\twhile (--i > -1) {\n\t\t\tname = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.\n\t\t\tif (ignore.indexOf(\",\" + name + \",\") < 0) {\n\t\t\t\tpath.setAttributeNS(null, name, attr[i].nodeValue);\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t},\n\t_typeAttrs = {\n\t\trect:\"rx,ry,x,y,width,height\",\n\t\tcircle:\"r,cx,cy\",\n\t\tellipse:\"rx,ry,cx,cy\",\n\t\tline:\"x1,x2,y1,y2\"\n\t},\n\t_attrToObj = (e, attrs) => {\n\t\tlet props = attrs ? attrs.split(\",\") : [],\n\t\t\tobj = {},\n\t\t\ti = props.length;\n\t\twhile (--i > -1) {\n\t\t\tobj[props[i]] = +e.getAttribute(props[i]) || 0;\n\t\t}\n\t\treturn obj;\n\t};\n\n//converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.\nexport function convertToPath(element, swap) {\n\tlet type = element.tagName.toLowerCase(),\n\t\tcirc = 0.552284749831,\n\t\tdata, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;\n\tif (type === \"path\" || !element.getBBox) {\n\t\treturn element;\n\t}\n\tpath = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n\tattr = _attrToObj(element, _typeAttrs[type]);\n\tif (type === \"rect\") {\n\t\tr = attr.rx;\n\t\try = attr.ry;\n\t\tx = attr.x;\n\t\ty = attr.y;\n\t\tw = attr.width - r * 2;\n\t\th = attr.height - ry * 2;\n\t\tif (r || ry) { //if there are rounded corners, render cubic beziers\n\t\t\tx2 = x + r * (1 - circ);\n\t\t\tx3 = x + r;\n\t\t\tx4 = x3 + w;\n\t\t\tx5 = x4 + r * circ;\n\t\t\tx6 = x4 + r;\n\t\t\ty2 = y + ry * (1 - circ);\n\t\t\ty3 = y + ry;\n\t\t\ty4 = y3 + h;\n\t\t\ty5 = y4 + ry * circ;\n\t\t\ty6 = y4 + ry;\n\t\t\tdata = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n\t\t} else {\n\t\t\tdata = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + (-w) + \" v\" + (-h) + \" h\" + w + \"z\";\n\t\t}\n\n\t} else if (type === \"circle\" || type === \"ellipse\") {\n\t\tif (type === \"circle\") {\n\t\t\tr = ry = attr.r;\n\t\t\trycirc = r * circ;\n\t\t} else {\n\t\t\tr = attr.rx;\n\t\t\try = attr.ry;\n\t\t\trycirc = ry * circ;\n\t\t}\n\t\tx = attr.cx;\n\t\ty = attr.cy;\n\t\trcirc = r * circ;\n\t\tdata = \"M\" + (x+r) + \",\" + y + \" C\" + [x+r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n\t} else if (type === \"line\") {\n\t\tdata = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2; //previously, we just converted to \"Mx,y Lx,y\" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.\n\t} else if (type === \"polyline\" || type === \"polygon\") {\n\t\tpoints = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n\t\tx = points.shift();\n\t\ty = points.shift();\n\t\tdata = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\t\tif (type === \"polygon\") {\n\t\t\tdata += \",\" + x + \",\" + y + \"z\";\n\t\t}\n\t}\n\tpath.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\tif (swap && element.parentNode) {\n\t\telement.parentNode.insertBefore(path, element);\n\t\telement.parentNode.removeChild(element);\n\t}\n\treturn path;\n}\n\n\n\n//returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)\nexport function getRotationAtProgress(rawPath, progress) {\n\tlet d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);\n\treturn getRotationAtBezierT(d.segment, d.i, d.t);\n}\n\nfunction getRotationAtBezierT(segment, i, t) {\n\tlet a = segment[i],\n\t\tb = segment[i+2],\n\t\tc = segment[i+4],\n\t\tx;\n\ta += (b - a) * t;\n\tb += (c - b) * t;\n\ta += (b - a) * t;\n\tx = b + ((c + (segment[i+6] - c) * t) - b) * t - a;\n\ta = segment[i+1];\n\tb = segment[i+3];\n\tc = segment[i+5];\n\ta += (b - a) * t;\n\tb += (c - b) * t;\n\ta += (b - a) * t;\n\treturn _round(_atan2(b + ((c + (segment[i+7] - c) * t) - b) * t - a, x) * _RAD2DEG);\n}\n\nexport function sliceRawPath(rawPath, start, end) {\n\tif (_isUndefined(end)) {\n\t\tend = 1;\n\t}\n\tstart = start || 0;\n\tlet reverse = start > end,\n\t\tloops = Math.max(0, ~~(_abs(end - start) - 1e-8));\n\tif (reverse) {\n\t\treverse = end;\n\t\tend = start;\n\t\tstart = reverse;\n\t\treverse = 1;\n\t\tloops -= loops ? 1 : 0;\n\t}\n\tif (start < 0 || end < 0) {\n\t\tlet offset = ~~Math.min(start, end) + 1;\n\t\tstart += offset;\n\t\tend += offset;\n\t}\n\tlet path = copyRawPath(rawPath.totalLength ? rawPath : cacheRawPathMeasurements(rawPath)),\n\t\twrap = (end > 1),\n\t\ts = getProgressData(path, start, _temp),\n\t\te = getProgressData(path, end, _temp2),\n\t\teSeg = e.segment,\n\t\tsSeg = s.segment,\n\t\teSegIndex = e.segIndex,\n\t\tsSegIndex = s.segIndex,\n\t\tei = e.i,\n\t\tsi = s.i,\n\t\tsameSegment = (sSegIndex === eSegIndex),\n\t\tsameBezier = (ei === si && sameSegment),\n\t\tinvertedOrder = ((sameSegment && si > ei) || (sameBezier && s.t > e.t)),\n\t\tsShift, eShift, i, copy, totalSegments, l, j;\n\tif (wrap || loops) {\n\t\tif (_splitSegment(path, sSegIndex, si, s.t)) {\n\t\t\tsShift = 1;\n\t\t\tsSegIndex++;\n\t\t\tif (sameBezier) {\n\t\t\t\tif (invertedOrder) {\n\t\t\t\t\te.t /= s.t;\n\t\t\t\t} else {\n\t\t\t\t\te.t = (e.t - s.t) / (1 - s.t);\n\t\t\t\t\teSegIndex++;\n\t\t\t\t\tei = 0;\n\t\t\t\t}\n\t\t\t} else if (sSegIndex <= eSegIndex + 1 && !invertedOrder) {\n\t\t\t\teSegIndex++;\n\t\t\t\tif (sameSegment) {\n\t\t\t\t\tei -= si;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!e.t) {\n\t\t\teSegIndex--;\n\t\t\tif (reverse) {\n\t\t\t\tsSegIndex--;\n\t\t\t}\n\t\t} else if (_splitSegment(path, eSegIndex, ei, e.t)) {\n\t\t\tif (invertedOrder && sShift) {\n\t\t\t\tsSegIndex++;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\teSegIndex++;\n\t\t\t}\n\t\t}\n\t\tcopy = [];\n\t\ttotalSegments = path.length;\n\t\tl = 1 + totalSegments * loops;\n\t\tj = sSegIndex;\n\t\tif (reverse) {\n\t\t\teSegIndex = (eSegIndex || totalSegments) - 1;\n\t\t\tl += (totalSegments - eSegIndex + sSegIndex) % totalSegments;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t_appendOrMerge(copy, path[j]);\n\t\t\t\tj = (j || totalSegments) - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tl += ((totalSegments - sSegIndex) + eSegIndex) % totalSegments;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t_appendOrMerge(copy, path[j++ % totalSegments]);\n\t\t\t}\n\t\t}\n\t\tpath = copy;\n\t} else {\n\t\teShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\t\tif (start !== end) {\n\t\t\tsShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\t\t\tif (sameSegment) {\n\t\t\t\teShift += sShift;\n\t\t\t}\n\t\t\teSeg.splice(ei + eShift + 2);\n\t\t\tif (sShift) {\n\t\t\t\tsSeg.splice(0, si + sShift);\n\t\t\t}\n\t\t\ti = path.length;\n\t\t\twhile (i--) {\n\t\t\t\t//chop off any extra segments\n\t\t\t\tif (i < sSegIndex || i > eSegIndex) {\n\t\t\t\t\tpath.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\teSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it'll be impossible to determine the angle after its length is 0!\n\t\t\tei += eShift;\n\t\t\ts = eSeg[ei];\n\t\t\te = eSeg[ei+1];\n\t\t\teSeg.length = eSeg.totalLength = 0;\n\t\t\teSeg.totalPoints = path.totalPoints = 8;\n\t\t\teSeg.push(s, e, s, e, s, e, s, e);\n\t\t}\n\t}\n\tif (reverse) {\n\t\t_reverseRawPath(path, wrap || loops);\n\t}\n\tpath.totalLength = 0;\n\treturn path;\n}\n\n//measures a Segment according to its resolution (so if segment.resolution is 6, for example, it'll take 6 samples equally across each Bezier) and create/populate a \"samples\" array that has the length up to each of those sample points (always increasing from the start) as well as a \"lookup\" array that's broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a \"totalLength\" property, but that's not generally super accurate because by default it'll only take 6 samples per Bezier. But for performance reasons, it's perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don't deviate by more than a certain precision value.\nfunction measureSegment(segment, startIndex, bezierQty) {\n\tstartIndex = startIndex || 0;\n\tif (!segment.samples) {\n\t\tsegment.samples = [];\n\t\tsegment.lookup = [];\n\t}\n\tlet resolution = ~~segment.resolution || 12,\n\t\tinc = 1 / resolution,\n\t\tendIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n\t\tx1 = segment[startIndex],\n\t\ty1 = segment[startIndex + 1],\n\t\tsamplesIndex = startIndex ? (startIndex / 6) * resolution : 0,\n\t\tsamples = segment.samples,\n\t\tlookup = segment.lookup,\n\t\tmin = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n\t\tprevLength = samples[samplesIndex + bezierQty * resolution - 1],\n\t\tlength = startIndex ? samples[samplesIndex-1] : 0,\n\t\ti, j, x4, x3, x2, xd, xd1, y4, y3, y2, yd, yd1, inv, t, lengthIndex, l, segLength;\n\tsamples.length = lookup.length = 0;\n\tfor (j = startIndex + 2; j < endIndex; j += 6) {\n\t\tx4 = segment[j + 4] - x1;\n\t\tx3 = segment[j + 2] - x1;\n\t\tx2 = segment[j] - x1;\n\t\ty4 = segment[j + 5] - y1;\n\t\ty3 = segment[j + 3] - y1;\n\t\ty2 = segment[j + 1] - y1;\n\t\txd = xd1 = yd = yd1 = 0;\n\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\tt = inc * i;\n\t\t\tinv = 1 - t;\n\t\t\txd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n\t\t\tyd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n\t\t\tl = _sqrt(yd * yd + xd * xd);\n\t\t\tif (l < min) {\n\t\t\t\tmin = l;\n\t\t\t}\n\t\t\tlength += l;\n\t\t\tsamples[samplesIndex++] = length;\n\t\t}\n\t\tx1 += x4;\n\t\ty1 += y4;\n\t}\n\tif (prevLength) {\n\t\tprevLength -= length;\n\t\tfor (; samplesIndex < samples.length; samplesIndex++) {\n\t\t\tsamples[samplesIndex] += prevLength;\n\t\t}\n\t}\n\tif (samples.length && min) {\n\t\tsegment.totalLength = segLength = samples[samples.length-1] || 0;\n\t\tsegment.minLength = min;\n\t\tl = lengthIndex = 0;\n\t\tfor (i = 0; i < segLength; i += min) {\n\t\t\tlookup[l++] = (samples[lengthIndex] < i) ? ++lengthIndex : lengthIndex;\n\t\t}\n\t} else {\n\t\tsegment.totalLength = samples[0] = 0;\n\t}\n\treturn startIndex ? length - samples[startIndex / 2 - 1] : length;\n}\n\nexport function cacheRawPathMeasurements(rawPath, resolution) {\n\tlet pathLength, points, i;\n\tfor (i = pathLength = points = 0; i < rawPath.length; i++) {\n\t\trawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)\n\t\tpoints += rawPath[i].length;\n\t\tpathLength += measureSegment(rawPath[i]);\n\t}\n\trawPath.totalPoints = points;\n\trawPath.totalLength = pathLength;\n\treturn rawPath;\n}\n\n//divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)\nexport function subdivideSegment(segment, i, t) {\n\tif (t <= 0 || t >= 1) {\n\t\treturn 0;\n\t}\n\tlet ax = segment[i],\n\t\tay = segment[i+1],\n\t\tcp1x = segment[i+2],\n\t\tcp1y = segment[i+3],\n\t\tcp2x = segment[i+4],\n\t\tcp2y = segment[i+5],\n\t\tbx = segment[i+6],\n\t\tby = segment[i+7],\n\t\tx1a = ax + (cp1x - ax) * t,\n\t\tx2 = cp1x + (cp2x - cp1x) * t,\n\t\ty1a = ay + (cp1y - ay) * t,\n\t\ty2 = cp1y + (cp2y - cp1y) * t,\n\t\tx1 = x1a + (x2 - x1a) * t,\n\t\ty1 = y1a + (y2 - y1a) * t,\n\t\tx2a = cp2x + (bx - cp2x) * t,\n\t\ty2a = cp2y + (by - cp2y) * t;\n\tx2 += (x2a - x2) * t;\n\ty2 += (y2a - y2) * t;\n\tsegment.splice(i + 2, 4,\n\t\t_round(x1a),                  //first control point\n\t\t_round(y1a),\n\t\t_round(x1),                   //second control point\n\t\t_round(y1),\n\t\t_round(x1 + (x2 - x1) * t),   //new fabricated anchor on line\n\t\t_round(y1 + (y2 - y1) * t),\n\t\t_round(x2),                   //third control point\n\t\t_round(y2),\n\t\t_round(x2a),                  //fourth control point\n\t\t_round(y2a)\n\t);\n\tif (segment.samples) {\n\t\tsegment.samples.splice(((i / 6) * segment.resolution) | 0, 0, 0, 0, 0, 0, 0, 0);\n\t}\n\treturn 6;\n}\n\n// returns an object {path, segment, segIndex, i, t}\nfunction getProgressData(rawPath, progress, decoratee) {\n\tdecoratee = decoratee || {};\n\tif (!rawPath.totalLength) {\n\t\tcacheRawPathMeasurements(rawPath);\n\t}\n\tif (progress < 0 || progress > 1) {\n\t\tprogress = _wrapProgress(progress);\n\t}\n\tlet segIndex = 0,\n\t\tsegment = rawPath[0],\n\t\tsamples, resolution, length, min, max, i;\n\tif (rawPath.length > 1) { //speed optimization: most of the time, there's only one segment so skip the recursion.\n\t\tlength = rawPath.totalLength * progress;\n\t\tmax = i = 0;\n\t\twhile ((max += rawPath[i++].totalLength) < length) {\n\t\t\tsegIndex = i;\n\t\t}\n\t\tsegment = rawPath[segIndex];\n\t\tmin = max - segment.totalLength;\n\t\tprogress = ((length - min) / (max - min)) || 0;\n\t}\n\tsamples = segment.samples;\n\tresolution = segment.resolution; //how many samples per cubic bezier chunk\n\tlength = segment.totalLength * progress;\n\ti = segment.lookup[~~(length / segment.minLength)] || 0;\n\tmin = i ? samples[i-1] : 0;\n\tmax = samples[i];\n\tif (max < length) {\n\t\tmin = max;\n\t\tmax = samples[++i];\n\t}\n\tdecoratee.path = rawPath;\n\tdecoratee.segment = segment;\n\tdecoratee.segIndex = segIndex;\n\tdecoratee.i = ~~(i / resolution) * 6;\n\tdecoratee.t = (1 / resolution) * (((length - min) / (max - min)) + ((i % resolution)));\n\treturn decoratee;\n}\n\nexport function getPositionOnPath(rawPath, progress, includeAngle, point) {\n\tlet segment = rawPath[0],\n\t\tresult = point || {},\n\t\tsamples, resolution, length, min, max, i, t, a, inv;\n\tif (progress < 0 || progress > 1) {\n\t\tprogress = _wrapProgress(progress);\n\t}\n\tif (rawPath.length > 1) { //speed optimization: most of the time, there's only one segment so skip the recursion.\n\t\tlength = rawPath.totalLength * progress;\n\t\tmax = i = 0;\n\t\twhile ((max += rawPath[i++].totalLength) < length) {\n\t\t\tsegment = rawPath[i];\n\t\t}\n\t\tmin = max - segment.totalLength;\n\t\tprogress = ((length - min) / (max - min)) || 0;\n\t}\n\tsamples = segment.samples;\n\tresolution = segment.resolution;\n\tlength = segment.totalLength * progress;\n\ti = segment.lookup[~~(length / segment.minLength)] || 0;\n\tmin = i ? samples[i-1] : 0;\n\tmax = samples[i];\n\tif (max < length) {\n\t\tmin = max;\n\t\tmax = samples[++i];\n\t}\n\tt = ((1 / resolution) * (((length - min) / (max - min)) + ((i % resolution)))) || 0;\n\tinv = 1 - t;\n\ti = ~~(i / resolution) * 6;\n\ta = segment[i];\n\tresult.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n\tresult.y = _round((t * t * (segment[i + 7] - (a = segment[i+1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\tif (includeAngle) {\n\t\tresult.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n\t}\n\treturn result;\n}\n\n\n\n//applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).\nexport function transformRawPath(rawPath, a, b, c, d, tx, ty) {\n\tlet j = rawPath.length,\n\t\tsegment, l, i, x, y;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tl = segment.length;\n\t\tfor (i = 0; i < l; i += 2) {\n\t\t\tx = segment[i];\n\t\t\ty = segment[i+1];\n\t\t\tsegment[i] = x * a + y * c + tx;\n\t\t\tsegment[i+1] = x * b + y * d + ty;\n\t\t}\n\t}\n\trawPath._dirty = 1;\n\treturn rawPath;\n}\n\n\n\n// translates SVG arc data into a segment (cubic beziers). Angle is in degrees.\nfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n\tif (lastX === x && lastY === y) {\n\t\treturn;\n\t}\n\trx = _abs(rx);\n\try = _abs(ry);\n\tlet angleRad = (angle % 360) * _DEG2RAD,\n\t\tcosAngle = _cos(angleRad),\n\t\tsinAngle = _sin(angleRad),\n\t\tPI = Math.PI,\n\t\tTWOPI = PI * 2,\n\t\tdx2 = (lastX - x) / 2,\n\t\tdy2 = (lastY - y) / 2,\n\t\tx1 = (cosAngle * dx2 + sinAngle * dy2),\n\t\ty1 = (-sinAngle * dx2 + cosAngle * dy2),\n\t\tx1_sq = x1 * x1,\n\t\ty1_sq = y1 * y1,\n\t\tradiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\tif (radiiCheck > 1) {\n\t\trx = _sqrt(radiiCheck) * rx;\n\t\try = _sqrt(radiiCheck) * ry;\n\t}\n\tlet rx_sq = rx * rx,\n\t\try_sq = ry * ry,\n\t\tsq = ((rx_sq * ry_sq) - (rx_sq * y1_sq) - (ry_sq * x1_sq)) / ((rx_sq * y1_sq) + (ry_sq * x1_sq));\n\tif (sq < 0) {\n\t\tsq = 0;\n\t}\n\tlet coef = ((largeArcFlag === sweepFlag) ? -1 : 1) * _sqrt(sq),\n\t\tcx1 = coef * ((rx * y1) / ry),\n\t\tcy1 = coef * -((ry * x1) / rx),\n\t\tsx2 = (lastX + x) / 2,\n\t\tsy2 = (lastY + y) / 2,\n\t\tcx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n\t\tcy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n\t\tux = (x1 - cx1) / rx,\n\t\tuy = (y1 - cy1) / ry,\n\t\tvx = (-x1 - cx1) / rx,\n\t\tvy = (-y1 - cy1) / ry,\n\t\ttemp = ux * ux + uy * uy,\n\t\tangleStart = ((uy < 0) ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n\t\tangleExtent = ((ux * vy - uy * vx < 0) ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\tif (isNaN(angleExtent)) { //rare edge case. Math.cos(-1) is NaN.\n\t\tangleExtent = PI;\n\t}\n\tif (!sweepFlag && angleExtent > 0) {\n\t\tangleExtent -= TWOPI;\n\t} else if (sweepFlag && angleExtent < 0) {\n\t\tangleExtent += TWOPI;\n\t}\n\tangleStart %= TWOPI;\n\tangleExtent %= TWOPI;\n\tlet segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n\t\trawPath = [],\n\t\tangleIncrement = angleExtent / segments,\n\t\tcontrolLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n\t\tma = cosAngle * rx,\n\t\tmb = sinAngle * rx,\n\t\tmc = sinAngle * -ry,\n\t\tmd = cosAngle * ry,\n\t\ti;\n\tfor (i = 0; i < segments; i++) {\n\t\tangle = angleStart + i * angleIncrement;\n\t\tx1 = _cos(angle);\n\t\ty1 = _sin(angle);\n\t\tux = _cos(angle += angleIncrement);\n\t\tuy = _sin(angle);\n\t\trawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n\t}\n\t//now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n\tfor (i = 0; i < rawPath.length; i+=2) {\n\t\tx1 = rawPath[i];\n\t\ty1 = rawPath[i+1];\n\t\trawPath[i] = x1 * ma + y1 * mc + cx;\n\t\trawPath[i+1] = x1 * mb + y1 * md + cy;\n\t}\n\trawPath[i-2] = x; //always set the end to exactly where it's supposed to be\n\trawPath[i-1] = y;\n\treturn rawPath;\n}\n\n//Spits back a RawPath with absolute coordinates. Each segment starts with a \"moveTo\" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\nexport function stringToRawPath(d) {\n\tlet a = (d + \"\").replace(_scientific, m => { let n = +m; return (n < 0.0001 && n > -0.0001) ? 0 : n; }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n\t\tpath = [],\n\t\trelativeX = 0,\n\t\trelativeY = 0,\n\t\ttwoThirds = 2 / 3,\n\t\telements = a.length,\n\t\tpoints = 0,\n\t\terrorMessage = \"ERROR: malformed path: \" + d,\n\t\ti, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand,\n\t\tline = function(sx, sy, ex, ey) {\n\t\t\tdifX = (ex - sx) / 3;\n\t\t\tdifY = (ey - sy) / 3;\n\t\t\tsegment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n\t\t};\n\tif (!d || !isNaN(a[0]) || isNaN(a[1])) {\n\t\tconsole.log(errorMessage);\n\t\treturn path;\n\t}\n\tfor (i = 0; i < elements; i++) {\n\t\tprevCommand = command;\n\t\tif (isNaN(a[i])) {\n\t\t\tcommand = a[i].toUpperCase();\n\t\t\tisRelative = (command !== a[i]); //lower case means relative\n\t\t} else { //commands like \"C\" can be strung together without any new command characters between.\n\t\t\ti--;\n\t\t}\n\t\tx = +a[i + 1];\n\t\ty = +a[i + 2];\n\t\tif (isRelative) {\n\t\t\tx += relativeX;\n\t\t\ty += relativeY;\n\t\t}\n\t\tif (!i) {\n\t\t\tstartX = x;\n\t\t\tstartY = y;\n\t\t}\n\n\t\t// \"M\" (move)\n\t\tif (command === \"M\") {\n\t\t\tif (segment) {\n\t\t\t\tif (segment.length < 8) { //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n\t\t\t\t\tpath.length -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tpoints += segment.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = startX = x;\n\t\t\trelativeY = startY = y;\n\t\t\tsegment = [x, y];\n\t\t\tpath.push(segment);\n\t\t\ti += 2;\n\t\t\tcommand = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n\n\t\t// \"C\" (cubic bezier)\n\t\t} else if (command === \"C\") {\n\t\t\tif (!segment) {\n\t\t\t\tsegment = [0, 0];\n\t\t\t}\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\t//note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\t\t\tsegment.push(x,\ty, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, (relativeX += a[i + 5] * 1),\t(relativeY += a[i + 6] * 1));\n\t\t\ti += 6;\n\n\t\t// \"S\" (continuation of cubic bezier)\n\t\t} else if (command === \"S\") {\n\t\t\tdifX = relativeX;\n\t\t\tdifY = relativeY;\n\t\t\tif (prevCommand === \"C\" || prevCommand === \"S\") {\n\t\t\t\tdifX += relativeX - segment[segment.length - 4];\n\t\t\t\tdifY += relativeY - segment[segment.length - 3];\n\t\t\t}\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\tsegment.push(difX, difY, x,\ty, (relativeX += a[i + 3] * 1), (relativeY += a[i + 4] * 1));\n\t\t\ti += 4;\n\n\t\t// \"Q\" (quadratic bezier)\n\t\t} else if (command === \"Q\") {\n\t\t\tdifX = relativeX + (x - relativeX) * twoThirds;\n\t\t\tdifY = relativeY + (y - relativeY) * twoThirds;\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\trelativeX += a[i + 3] * 1;\n\t\t\trelativeY += a[i + 4] * 1;\n\t\t\tsegment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n\t\t\ti += 4;\n\n\t\t// \"T\" (continuation of quadratic bezier)\n\t\t} else if (command === \"T\") {\n\t\t\tdifX = relativeX - segment[segment.length - 4];\n\t\t\tdifY = relativeY - segment[segment.length - 3];\n\t\t\tsegment.push(relativeX + difX, relativeY + difY, x + ((relativeX + difX * 1.5) - x) * twoThirds, y + ((relativeY + difY * 1.5) - y) * twoThirds, (relativeX = x), (relativeY = y));\n\t\t\ti += 2;\n\n\t\t// \"H\" (horizontal line)\n\t\t} else if (command === \"H\") {\n\t\t\tline(relativeX, relativeY, (relativeX = x), relativeY);\n\t\t\ti += 1;\n\n\t\t// \"V\" (vertical line)\n\t\t} else if (command === \"V\") {\n\t\t\t//adjust values because the first (and only one) isn't x in this case, it's y.\n\t\t\tline(relativeX, relativeY, relativeX, (relativeY = x + (isRelative ? relativeY - relativeX : 0)));\n\t\t\ti += 1;\n\n\t\t// \"L\" (line) or \"Z\" (close)\n\t\t} else if (command === \"L\" || command === \"Z\") {\n\t\t\tif (command === \"Z\") {\n\t\t\t\tx = startX;\n\t\t\t\ty = startY;\n\t\t\t\tsegment.closed = true;\n\t\t\t}\n\t\t\tif (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n\t\t\t\tline(relativeX, relativeY, x, y);\n\t\t\t\tif (command === \"L\") {\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = x;\n\t\t\trelativeY = y;\n\n\t\t// \"A\" (arc)\n\t\t} else if (command === \"A\") {\n\t\t\tbeziers = arcToSegment(relativeX, relativeY, +a[i+1], +a[i+2], +a[i+3], +a[i+4], +a[i+5], (isRelative ? relativeX : 0) + a[i+6]*1, (isRelative ? relativeY : 0) + a[i+7]*1);\n\t\t\tif (beziers) {\n\t\t\t\tfor (j = 0; j < beziers.length; j++) {\n\t\t\t\t\tsegment.push(beziers[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = segment[segment.length-2];\n\t\t\trelativeY = segment[segment.length-1];\n\t\t\ti += 7;\n\n\t\t} else {\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\t}\n\ti = segment.length;\n\tif (i < 6) { //in case there's odd SVG like a M0,0 command at the very end.\n\t\tpath.pop();\n\t\ti = 0;\n\t} else if (segment[0] === segment[i-2] && segment[1] === segment[i-1]) {\n\t\tsegment.closed = true;\n\t}\n\tpath.totalPoints = points + i;\n\treturn path;\n}\n\n//populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we're handling segment arrays\nexport function bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n\tlet x12 = (x1 + x2) / 2,\n\t\ty12 = (y1 + y2) / 2,\n\t\tx23 = (x2 + x3) / 2,\n\t\ty23 = (y2 + y3) / 2,\n\t\tx34 = (x3 + x4) / 2,\n\t\ty34 = (y3 + y4) / 2,\n\t\tx123 = (x12 + x23) / 2,\n\t\ty123 = (y12 + y23) / 2,\n\t\tx234 = (x23 + x34) / 2,\n\t\ty234 = (y23 + y34) / 2,\n\t\tx1234 = (x123 + x234) / 2,\n\t\ty1234 = (y123 + y234) / 2,\n\t\tdx = x4 - x1,\n\t\tdy = y4 - y1,\n\t\td2 = _abs((x2 - x4) * dy - (y2 - y4) * dx),\n\t\td3 = _abs((x3 - x4) * dy - (y3 - y4) * dx),\n\t\tlength;\n\tif (!points) {\n\t\tpoints = [x1, y1, x4, y4];\n\t\tindex = 2;\n\t}\n\tpoints.splice(index || points.length - 2, 0, x1234, y1234);\n\tif ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n\t\tlength = points.length;\n\t\tbezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n\t\tbezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));\n\t}\n\treturn points;\n}\n\n/*\nfunction getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians\n\tvar dx1 = x1 - x0,\n\t\tdy1 = y1 - y0,\n\t\tdx2 = x2 - x1,\n\t\tdy2 = y2 - y1,\n\t\tdx3 = x2 - x0,\n\t\tdy3 = y2 - y0,\n\t\ta = dx1 * dx1 + dy1 * dy1,\n\t\tb = dx2 * dx2 + dy2 * dy2,\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\treturn Math.acos( (a + b - c) / _sqrt(4 * a * b) );\n},\n*/\n\n//pointsToSegment() doesn't handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)\nexport function flatPointsToSegment(points, curviness=1) {\n\tlet x = points[0],\n\t\ty = 0,\n\t\tsegment = [x, y],\n\t\ti = 2;\n\tfor (; i < points.length; i+=2) {\n\t\tsegment.push(\n\t\t\tx,\n\t\t\ty,\n\t\t\tpoints[i],\n\t\t\t(y = (points[i] - x) * curviness / 2),\n\t\t\t(x = points[i]),\n\t\t\t-y\n\t\t);\n\t}\n\treturn segment;\n}\n\n//points is an array of x/y points, like [x, y, x, y, x, y]\nexport function pointsToSegment(points, curviness, cornerThreshold) {\n\t//points = simplifyPoints(points, tolerance);\n\tlet l = points.length-2,\n\t\tx = +points[0],\n\t\ty = +points[1],\n\t\tnextX = +points[2],\n\t\tnextY = +points[3],\n\t\tsegment = [x, y, x, y],\n\t\tdx2 = nextX - x,\n\t\tdy2 = nextY - y,\n\t\tprevX, prevY, angle, slope, i, dx1, dx3, dy1, dy3, d1, d2, a, b, c;\n\tif (isNaN(cornerThreshold)) {\n\t\tcornerThreshold = Math.PI / 10;\n\t}\n\tcurviness = (curviness || curviness === 0) ? +curviness : 1;\n\tfor (i = 2; i < l; i+=2) {\n\t\tprevX = x;\n\t\tprevY = y;\n\t\tx = nextX;\n\t\ty = nextY;\n\t\tnextX = +points[i+2];\n\t\tnextY = +points[i+3];\n\t\tdx1 = dx2;\n\t\tdy1 = dy2;\n\t\tdx2 = nextX - x;\n\t\tdy2 = nextY - y;\n\t\tdx3 = nextX - prevX;\n\t\tdy3 = nextY - prevY;\n\t\ta = dx1 * dx1 + dy1 * dy1;\n\t\tb = dx2 * dx2 + dy2 * dy2;\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\t\tangle = Math.acos( (a + b - c) / _sqrt(4 * a * b) ); //angle between the 3 points\n\t\td2 = (angle / Math.PI) * curviness; //temporary precalculation for speed (reusing d2 variable)\n\t\td1 = _sqrt(a) * d2; //the tighter the angle, the shorter we make the handles in proportion.\n\t\td2 *= _sqrt(b);\n\t\tif (x !== prevX || y !== prevY) {\n\t\t\tif (angle > cornerThreshold) {\n\t\t\t\tslope = _atan2(dy3, dx3);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x - _cos(slope) * d1),   //first control point\n\t\t\t\t\t_round(y - _sin(slope) * d1),\n\t\t\t\t\t_round(x),                      //anchor\n\t\t\t\t\t_round(y),\n\t\t\t\t\t_round(x + _cos(slope) * d2),   //second control point\n\t\t\t\t\t_round(y + _sin(slope) * d2)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tslope = _atan2(dy1, dx1);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x - _cos(slope) * d1),   //first control point\n\t\t\t\t\t_round(y - _sin(slope) * d1));\n\t\t\t\tslope = _atan2(dy2, dx2);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x),                      //anchor\n\t\t\t\t\t_round(y),\n\t\t\t\t\t_round(x + _cos(slope) * d2),   //second control point\n\t\t\t\t\t_round(y + _sin(slope) * d2)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tsegment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY));\n\treturn segment;\n}\n\n//returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2\nfunction pointToSegDist(x, y, x1, y1, x2, y2) {\n\tlet dx = x2 - x1,\n\t\tdy = y2 - y1,\n\t\tt;\n\tif (dx || dy) {\n\t\tt = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\t\tif (t > 1) {\n\t\t\tx1 = x2;\n\t\t\ty1 = y2;\n\t\t} else if (t > 0) {\n\t\t\tx1 += dx * t;\n\t\t\ty1 += dy * t;\n\t\t}\n\t}\n\treturn (x - x1) ** 2 + (y - y1) ** 2;\n}\n\nfunction simplifyStep(points, first, last, tolerance, simplified) {\n\tlet maxSqDist = tolerance,\n\t\tfirstX = points[first],\n\t\tfirstY = points[first+1],\n\t\tlastX = points[last],\n\t\tlastY = points[last+1],\n\t\tindex, i, d;\n\tfor (i = first + 2; i < last; i += 2) {\n\t\td = pointToSegDist(points[i], points[i+1], firstX, firstY, lastX, lastY);\n\t\tif (d > maxSqDist) {\n\t\t\tindex = i;\n\t\t\tmaxSqDist = d;\n\t\t}\n\t}\n\tif (maxSqDist > tolerance) {\n\t\tif (index - first > 2) {\n\t\t\tsimplifyStep(points, first, index, tolerance, simplified);\n\t\t}\n\t\tsimplified.push(points[index], points[index+1]);\n\t\tif (last - index > 2) {\n\t\t\tsimplifyStep(points, index, last, tolerance, simplified);\n\t\t}\n\t}\n}\n\n//points is an array of x/y values like [x, y, x, y, x, y]\nexport function simplifyPoints(points, tolerance) {\n\tlet prevX = parseFloat(points[0]),\n\t\tprevY = parseFloat(points[1]),\n\t\ttemp = [prevX, prevY],\n\t\tl = points.length - 2,\n\t\ti, x, y, dx, dy, result, last;\n\ttolerance = (tolerance || 1) ** 2;\n\tfor (i = 2; i < l; i += 2) {\n\t\tx = parseFloat(points[i]);\n\t\ty = parseFloat(points[i+1]);\n\t\tdx = prevX - x;\n\t\tdy = prevY - y;\n\t\tif (dx * dx + dy * dy > tolerance) {\n\t\t\ttemp.push(x, y);\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t}\n\ttemp.push(parseFloat(points[l]), parseFloat(points[l+1]));\n\tlast = temp.length - 2;\n\tresult = [temp[0], temp[1]];\n\tsimplifyStep(temp, 0, last, tolerance, result);\n\tresult.push(temp[last], temp[last+1]);\n\treturn result;\n}\n\nfunction getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {\n\tlet inc = (end - start) / slices,\n\t\tbest = 0,\n\t\tt = start,\n\t\tx, y, d, dx, dy, inv;\n\t_bestDistance = _largeNum;\n\twhile (t <= end) {\n\t\tinv = 1 - t;\n\t\tx = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;\n\t\ty = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;\n\t\tdx = x - px;\n\t\tdy = y - py;\n\t\td = dx * dx + dy * dy;\n\t\tif (d < _bestDistance) {\n\t\t\t_bestDistance = d;\n\t\t\tbest = t;\n\t\t}\n\t\tt += inc;\n\t}\n\treturn (iterations > 1) ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;\n}\n\nexport function getClosestData(rawPath, x, y, slices) { //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)\n\tlet closest = {j:0, i:0, t:0},\n\t\tbestDistance = _largeNum,\n\t\ti, j, t, segment;\n\tfor (j = 0; j < rawPath.length; j++) {\n\t\tsegment = rawPath[j];\n\t\tfor (i = 0; i < segment.length; i+=6) {\n\t\t\tt = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i+1], segment[i+2], segment[i+3], segment[i+4], segment[i+5], segment[i+6], segment[i+7]);\n\t\t\tif (bestDistance > _bestDistance) {\n\t\t\t\tbestDistance = _bestDistance;\n\t\t\t\tclosest.j = j;\n\t\t\t\tclosest.i = i;\n\t\t\t\tclosest.t = t;\n\t\t\t}\n\t\t}\n\t}\n\treturn closest;\n}\n\n//subdivide a Segment closest to a specific x,y coordinate\nexport function subdivideSegmentNear(x, y, segment, slices, iterations) {\n\tlet l = segment.length,\n\t\tbestDistance = _largeNum,\n\t\tbestT = 0,\n\t\tbestSegmentIndex = 0,\n\t\tt, i;\n\tslices = slices || 20;\n\titerations = iterations || 3;\n\tfor (i = 0; i < l; i += 6) {\n\t\tt = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i+1], segment[i+2], segment[i+3], segment[i+4], segment[i+5], segment[i+6], segment[i+7]);\n\t\tif (bestDistance > _bestDistance) {\n\t\t\tbestDistance = _bestDistance;\n\t\t\tbestT = t;\n\t\t\tbestSegmentIndex = i;\n\t\t}\n\t}\n\tt = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex+1], segment[bestSegmentIndex+2], segment[bestSegmentIndex+3], segment[bestSegmentIndex+4], segment[bestSegmentIndex+5], segment[bestSegmentIndex+6], segment[bestSegmentIndex+7]);\n\tsubdivideSegment(segment, bestSegmentIndex, t);\n\treturn bestSegmentIndex + 6;\n}\n\n/*\nTakes any of the following and converts it to an all Cubic Bezier SVG data string:\n- A <path> data string like \"M0,0 L2,4 v20,15 H100\"\n- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]\n- A Segment, like [x, y, x, y, x, y, x, y]\n\nNote: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13\n*/\nexport function rawPathToString(rawPath) {\n\tif (_isNumber(rawPath[0])) { //in case a segment is passed in instead\n\t\trawPath = [rawPath];\n\t}\n\tlet result = \"\",\n\t\tl = rawPath.length,\n\t\tsl, s, i, segment;\n\tfor (s = 0; s < l; s++) {\n\t\tsegment = rawPath[s];\n\t\tresult += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n\t\tsl = segment.length;\n\t\tfor (i = 2; i < sl; i++) {\n\t\t\tresult += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n\t\t}\n\t\tif (segment.closed) {\n\t\t\tresult += \"z\";\n\t\t}\n\t}\n\treturn result;\n}\n\n/*\n// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o'clock to 6 o'clock, it'd just go directly/linearly rather than around. So the length would be very short in the middle of the tween.\nexport function cpCoordsToAngles(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tx, y, i;\n\tfor (i = 0; i < segment.length; i+=6) {\n\t\tx = segment[i+2] - segment[i];\n\t\ty = segment[i+3] - segment[i+1];\n\t\tresult[i+2] = Math.atan2(y, x);\n\t\tresult[i+3] = Math.sqrt(x * x + y * y);\n\t\tx = segment[i+6] - segment[i+4];\n\t\ty = segment[i+7] - segment[i+5];\n\t\tresult[i+4] = Math.atan2(y, x);\n\t\tresult[i+5] = Math.sqrt(x * x + y * y);\n\t}\n\treturn result;\n}\n\n// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.\nexport function cpAnglesToCoords(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tlength = segment.length,\n\t\trnd = 1000,\n\t\tangle, l, i, j;\n\tfor (i = 0; i < length; i+=6) {\n\t\tangle = segment[i+2];\n\t\tl = segment[i+3]; //length\n\t\tresult[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t\tangle = segment[i+4];\n\t\tl = segment[i+5]; //length\n\t\tresult[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t}\n\treturn result;\n}\n\n//adds an \"isSmooth\" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\nexport function populateSmoothData(rawPath) {\n\tlet j = rawPath.length,\n\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\tisSmooth.length = 4;\n\t\tl = segment.length - 2;\n\t\tfor (i = 6; i < l; i += 6) {\n\t\t\tx = segment[i] - segment[i - 2];\n\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tsmooth = (Math.abs(a - a2) < 0.09);\n\t\t\tif (smooth) {\n\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t}\n\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t}\n\t\t//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\tx = segment[0] - segment[l-2];\n\t\t\ty = segment[1] - segment[l-1];\n\t\t\tx2 = segment[2] - segment[0];\n\t\t\ty2 = segment[3] - segment[1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tif (Math.abs(a - a2) < 0.09) {\n\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\tsmoothData[2] = a2;\n\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t}\n\t\t}\n\t}\n\treturn rawPath;\n}\nexport function pointToScreen(svgElement, point) {\n\tif (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point\n\t\tlet rawPath = getRawPath(svgElement);\n\t\tpoint = svgElement.ownerSVGElement.createSVGPoint();\n\t\tpoint.x = rawPath[0][0];\n\t\tpoint.y = rawPath[0][1];\n\t}\n\treturn point.matrixTransform(svgElement.getScreenCTM());\n}\n\n*/","/*!\n * matrix 3.0.0\n * https://greensock.com\n *\n * Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet _doc, _win,\n\t_transformProp = \"transform\",\n\t_transformOriginProp = _transformProp + \"Origin\",\n\t_setDoc = element => {\n\t\tlet doc = element.ownerDocument || element;\n\t\tif (!(_transformProp in element.style) && \"msTransform\" in element.style) { //to improve compatibility with old Microsoft browsers\n\t\t\t_transformProp = \"msTransform\";\n\t\t\t_transformOriginProp = _transformProp + \"Origin\";\n\t\t}\n\t\twhile (doc.parentNode && (doc = doc.parentNode)) {\t}\n\t\t_win = window;\n\t\treturn (_doc = doc);\n\t},\n\t_svgTemps = [], //we create 3 elements for SVG, and 3 for other DOM elements and cache them for performance reasons. They get nested in _divContainer and _svgContainer so that just one element is added to the DOM on each successive attempt. Again, performance is key.\n\t_divTemps = [],\n\t_divContainer,\n\t_svgContainer,\n\t_svgOwner = element => element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null),\n\t_createSibling = (element, i) => {\n\t\tif (element.parentNode && (_doc || _setDoc(element))) {\n\t\t\tlet svg = _svgOwner(element),\n\t\t\t\tns = svg ? (svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\") : \"http://www.w3.org/1999/xhtml\",\n\t\t\t\ttype = svg ? (i ? \"rect\" : \"g\") : \"div\",\n\t\t\t\tx = i !== 2 ? 0 : 100,\n\t\t\t\ty = i === 3 ? 100 : 0,\n\t\t\t\tcss = \"position:absolute;display:block;\",\n\t\t\t\te = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\t\t\tif (i) {\n\t\t\t\tif (!svg) {\n\t\t\t\t\tif (!_divContainer) {\n\t\t\t\t\t\t_divContainer = _createSibling(element);\n\t\t\t\t\t\t_divContainer.style.cssText = css;\n\t\t\t\t\t}\n\t\t\t\t\te.style.cssText = css + \"width:1px;height:1px;top:\" + y + \"px;left:\" + x + \"px\";\n\t\t\t\t\t_divContainer.appendChild(e);\n\n\t\t\t\t} else {\n\t\t\t\t\tif (!_svgContainer) {\n\t\t\t\t\t\t_svgContainer = _createSibling(element);\n\t\t\t\t\t}\n\t\t\t\t\te.setAttribute(\"width\", 1);\n\t\t\t\t\te.setAttribute(\"height\", 1);\n\t\t\t\t\te.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\t\t\t\t\t_svgContainer.appendChild(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn e;\n\t\t}\n\t\tthrow \"Need document and parent.\";\n\t},\n\t_placeSiblings = element => {\n\t\tlet svg = _svgOwner(element),\n\t\t\tisRootSVG = element === svg,\n\t\t\tsiblings = svg ? _svgTemps : _divTemps,\n\t\t\tcontainer, m, b, x, y;\n\t\tif (element === _win) {\n\t\t\treturn element;\n\t\t}\n\t\tif (!siblings.length) {\n\t\t\tsiblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n\t\t}\n\t\tcontainer = svg ? _svgContainer : _divContainer;\n\t\tif (svg) {\n\t\t\tb = (isRootSVG || element.tagName.toLowerCase() === \"g\") ? {x:0, y:0} : element.getBBox();\n\t\t\tm = element.transform.baseVal;\n\t\t\tif (m.length) {\n\t\t\t\tm = m.consolidate().matrix;\n\t\t\t\tx = m.a * b.x + m.c * b.y;\n\t\t\t\ty = m.b * b.x + m.d * b.y;\n\t\t\t} else {\n\t\t\t\tm = new Matrix2D();\n\t\t\t\tx = b.x; //MAY NEED TO BE 0, 0 in some scenarios(?)\n\t\t\t\ty = b.y;\n\t\t\t}\n\t\t\tcontainer.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n\t\t\t(isRootSVG ? svg : element.parentNode).appendChild(container);\n\t\t} else {\n\t\t\tcontainer.style.top = element.offsetTop + \"px\";\n\t\t\tcontainer.style.left = element.offsetLeft + \"px\";\n\t\t\tm = _win.getComputedStyle(element);\n\t\t\tcontainer.style[_transformProp] = m[_transformProp];\n\t\t\tcontainer.style[_transformOriginProp] = m[_transformOriginProp];\n\t\t\telement.parentNode.appendChild(container);\n\t\t}\n\t\treturn container;\n\t},\n\t_setMatrix = (m, a, b, c, d, e, f) => {\n\t\tm.a = a;\n\t\tm.b = b;\n\t\tm.c = c;\n\t\tm.d = d;\n\t\tm.e = e;\n\t\tm.f = f;\n\t\treturn m;\n\t};\n\nexport class Matrix2D {\n\tconstructor(a=1, b=0, c=0, d=1, e=0, f=0) {\n\t\t_setMatrix(this, a, b, c, d, e, f);\n\t}\n\n\tinverse() {\n\t\tlet {a, b, c, d, e, f} = this,\n\t\t\tdeterminant = (a * d - b * c);\n\t\treturn _setMatrix(\n\t\t\tthis,\n\t\t\td / determinant,\n\t\t\t-b / determinant,\n\t\t\t-c / determinant,\n\t\t\ta / determinant,\n\t\t\t(c * f - d * e) / determinant,\n\t\t\t-(a * f - b * e) / determinant\n\t\t);\n\t}\n\n\tmultiply(matrix) {\n\t\tlet {a, b, c, d, e, f} = this,\n\t\t\ta2 = matrix.a,\n\t\t\tb2 = matrix.c,\n\t\t\tc2 = matrix.b,\n\t\t\td2 = matrix.d,\n\t\t\te2 = matrix.e,\n\t\t\tf2 = matrix.f;\n\t\treturn _setMatrix(this,\n\t\t\ta2 * a + c2 * c,\n\t\t\ta2 * b + c2 * d,\n\t\t\tb2 * a + d2 * c,\n\t\t\tb2 * b + d2 * d,\n\t\t\te + e2 * a + f2 * c,\n\t\t\tf + e2 * b + f2 * d);\n\t}\n\n\tequals(matrix) {\n\t\tlet {a, b, c, d, e, f} = this;\n\t\treturn (a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f);\n\t}\n\n\tapply(point, decoratee={}) {\n\t\tlet {x, y} = point,\n\t\t\t{a, b, c, d, e, f} = this;\n\t\tdecoratee.x = x * a + y * c + e;\n\t\tdecoratee.y = x * b + y * d + f;\n\t\treturn decoratee;\n\t}\n\n}\n\n//feed in an element and it'll return a 2D matrix (optionally inverted) so that you can translate between coordinate spaces.\n// Inverting lets you translate a global point into a local coordinate space. No inverting lets you go the other way.\n// We needed this to work around various browser bugs, like Firefox doesn't accurately report getScreenCTM() when there\n// are transforms applied to ancestor elements.\n// The matrix math to convert any x/y coordinate is:\n//     tx = m.a * x + m.c * y + m.e\n//     ty = m.b * x + m.d * y + m.f\nexport function getGlobalMatrix(element, inverse) {\n\tif (!element.parentNode) {\n\t\treturn new Matrix2D();\n\t}\n\tlet svg = _svgOwner(element),\n\t\ttemps = svg ? _svgTemps : _divTemps,\n\t\tcontainer = _placeSiblings(element),\n\t\tb1 = temps[0].getBoundingClientRect(),\n\t\tb2 = temps[1].getBoundingClientRect(),\n\t\tb3 = temps[2].getBoundingClientRect(),\n\t\tparent = container.parentNode,\n\t\tm = new Matrix2D(\n\t\t\t(b2.left - b1.left) / 100,\n\t\t\t(b2.top - b1.top) / 100,\n\t\t\t(b3.left - b1.left) / 100,\n\t\t\t(b3.top - b1.top) / 100,\n\t\t\tb1.left,\n\t\t\tb1.top\n\t\t);\n\tparent.removeChild(container);\n\treturn inverse ? m.inverse() : m;\n}\n","/*!\n * PathEditor 3.0.0\n * https://greensock.com\n *\n * Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport { stringToRawPath, rawPathToString, bezierToPoints, simplifyPoints, pointsToSegment, subdivideSegment, getClosestData, copyRawPath, transformRawPath } from \"./paths.js\";\nimport { getGlobalMatrix } from \"./matrix.js\";\n\nlet _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_doc,\n\t_selectionColor = \"#4e7fff\",\n\t_minimumMovement = 1,\n\t_DEG2RAD = Math.PI / 180,\n\t_getTime = Date.now || (() => new Date().getTime()),\n\t_lastInteraction = 0,\n\t_isPressed = 0,\n\t_interacted = () => _lastInteraction = _getTime(),\n\t_CTRL, _ALT, _SHIFT, _CMD, _matrix,\n\t_recentlyAddedAnchor,\n\t_editingAxis = {}, //stores the x/y of the most recently-selected anchor point's x and y axis. We tap into this for snapping horizontally and vertically.\n\t_history = [],\n\t_point = {}, //reuse to minimize memory and maximize performance (mostly for snapping)\n\t_temp = [], //reuse this in places like getNormalizedSVG() to conserve memory\n\t_comma = \",\",\n\t_selectedPaths = [],\n\t_createElement = type => _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type),\n\t_createSVG = (type, container, attributes) => {\n\t\tlet element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type),\n\t\t\treg = /([a-z])([A-Z])/g,\n\t\t\tp;\n\t\tattributes = attributes || {};\n\t\tattributes.class = attributes.class || \"path-editor\";\n\t\tfor (p in attributes) {\n\t\t\tif (element.style[p] !== undefined) {\n\t\t\t\telement.style[p] = attributes[p];\n\t\t\t} else {\n\t\t\t\telement.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t\t\t}\n\t\t}\n\t\tcontainer.appendChild(element);\n\t\treturn element;\n\t},\n\t_identityMatrixObject = {matrix:{a:1, b:0, c:0, d:1, e:0, f:0}},\n\t_getConsolidatedMatrix = target => (target.transform.baseVal.consolidate() || _identityMatrixObject).matrix,\n\t_addHistory = pathEditor => {\n\t\tlet selectedIndexes = [],\n\t\t\ta = pathEditor._selectedAnchors,\n\t\t\ti;\n\t\tfor (i = 0; i < a.length; i++) {\n\t\t\tselectedIndexes[i] = a[i].i;\n\t\t}\n\t\t_history.unshift({path:pathEditor, d:pathEditor.path.getAttribute(\"d\"), transform:pathEditor.path.getAttribute(\"transform\") || \"\", selectedIndexes:selectedIndexes});\n\t\tif (_history.length > 30) {\n\t\t\t_history.length = 30;\n\t\t}\n\t},\n\t_round = value =>  ~~(value * 1000 + (value < 0 ? -.5 : .5)) / 1000,\n\t_getSquarePathData = size => {\n\t\tsize = _round(size);\n\t\treturn [\"M-\" + size, -size, size, -size, size, size, -size, size + \"z\"].join(_comma);\n\t},\n\t_getCirclePathData = size => {\n\t\tlet circ = 0.552284749831,\n\t\t\trcirc = _round(size * circ);\n\t\tsize = _round(size);\n\t\treturn \"M\" + size + \",0C\" + [size, rcirc, rcirc, size, 0, size,  -rcirc, size, -size, rcirc, -size, 0, -size, -rcirc, -rcirc, -size, 0, -size, rcirc, -size, size, -rcirc, size, 0].join(_comma) + \"z\";\n\t},\n\t_checkDeselect = function(e) {\n\t\tif (!e.target._gsSelection && !_isPressed && _getTime() - _lastInteraction > 100) {\n\t\t\tlet i = _selectedPaths.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\t_selectedPaths[i].deselect();\n\t\t\t}\n\t\t\t_selectedPaths.length = 0;\n\t\t}\n\t},\n\t_tempDiv, _touchEventLookup,\n\t_isMultiTouching = 0,\n\t_addListener = (element, type, func, capture) => {\n\t\tif (element.addEventListener) {\n\t\t\tlet touchType = _touchEventLookup[type];\n\t\t\tcapture = capture || {passive:false};\n\t\t\telement.addEventListener(touchType || type, func, capture);\n\t\t\tif (touchType && type !== touchType && touchType.substr(0, 7) !== \"pointer\") { //some browsers actually support both, so must we. But pointer events cover all.\n\t\t\t\telement.addEventListener(type, func, capture);\n\t\t\t}\n\t\t} else if (element.attachEvent) {\n\t\t\telement.attachEvent(\"on\" + type, func);\n\t\t}\n\t},\n\t_removeListener = (element, type, func) => {\n\t\tif (element.removeEventListener) {\n\t\t\tlet touchType = _touchEventLookup[type];\n\t\t\telement.removeEventListener(touchType || type, func);\n\t\t\tif (touchType && type !== touchType && touchType.substr(0, 7) !== \"pointer\") {\n\t\t\t\telement.removeEventListener(type, func);\n\t\t\t}\n\t\t} else if (element.detachEvent) {\n\t\t\telement.detachEvent(\"on\" + type, func);\n\t\t}\n\t},\n\t_hasTouchID = (list, ID) => {\n\t\tlet i = list.length;\n\t\twhile (--i > -1) {\n\t\t\tif (list[i].identifier === ID) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_onMultiTouchDocumentEnd = e => {\n\t\t_isMultiTouching = (e.touches && _dragCount < e.touches.length);\n\t\t_removeListener(e.target, \"touchend\", _onMultiTouchDocumentEnd);\n\t},\n\t_onMultiTouchDocument = e => {\n\t\t_isMultiTouching = (e.touches && _dragCount < e.touches.length);\n\t\t_addListener(e.target, \"touchend\", _onMultiTouchDocumentEnd);\n\t},\n\t_bind = (func, scope) => e => func.call(scope, e),\n\t_callback = (type, self, param) => {\n\t\tlet callback = self.vars[type];\n\t\tif (callback) {\n\t\t\tcallback.call(self.vars.callbackScope || self, param || self);\n\t\t}\n\t\treturn self;\n\t},\n\t_coreInitted,\n\t_initCore = () => {\n\t\t_doc = document;\n\t\t_tempDiv = _createElement(\"div\");\n\t\t_touchEventLookup = (function(types) { //we create an object that makes it easy to translate touch event types into their \"pointer\" counterparts if we're in a browser that uses those instead. Like IE10 uses \"MSPointerDown\" instead of \"touchstart\", for example.\n\t\t\tlet standard = types.split(\",\"),\n\t\t\t\tconverted = ((_tempDiv.onpointerdown !== undefined) ? \"pointerdown,pointermove,pointerup,pointercancel\" : (_tempDiv.onmspointerdown !== undefined) ? \"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel\" : types).split(\",\"),\n\t\t\t\tobj = {},\n\t\t\t\ti = 4;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj[standard[i]] = converted[i];\n\t\t\t\tobj[converted[i]] = standard[i];\n\t\t\t}\n\t\t\treturn obj;\n\t\t}(\"touchstart,touchmove,touchend,touchcancel\")),\n\t\tSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(e) { //adds Chrome support\n\t\t\treturn e.getScreenCTM().inverse().multiply(this.getScreenCTM());\n\t\t};\n\t\t_doc.addEventListener(\"keydown\", function(e) {\n\t\t\tlet key = e.key || e.which,\n\t\t\t\ti, state, a, path;\n\t\t\tif (key === \"Shift\" || key === 16) {\n\t\t\t\t_SHIFT = true;\n\t\t\t} else if (key === \"Control\" || key === 17) {\n\t\t\t\t_CTRL = true;\n\t\t\t} else if (key === \"Meta\" || key === 91) {\n\t\t\t\t_CMD = true;\n\t\t\t} else if (key === \"Alt\" || key === 18) {\n\t\t\t\t_ALT = true;\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._onPressAlt();\n\t\t\t\t}\n\t\t\t} else if ((key === \"z\" || key === 90) && (_CTRL || _CMD) && _history.length > 1) { //UNDO\n\t\t\t\t_history.shift();\n\t\t\t\tstate = _history[0];\n\t\t\t\tif (state) {\n\t\t\t\t\tpath = state.path;\n\t\t\t\t\tpath.path.setAttribute(\"d\", state.d);\n\t\t\t\t\tpath.path.setAttribute(\"transform\", state.transform);\n\t\t\t\t\tpath.init();\n\t\t\t\t\ta = path._anchors;\n\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\tif (state.selectedIndexes.indexOf(a[i].i) !== -1) {\n\t\t\t\t\t\t\tpath._selectedAnchors.push(a[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpath._updateAnchors();\n\t\t\t\t\tpath.update();\n\t\t\t\t\tif (path.vars.onUndo) {\n\t\t\t\t\t\tpath.vars.onUndo.call(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (key === \"Delete\" || key === \"Backspace\" || key === 8 || key === 46 || key === 63272 || (key === \"d\" && (_CTRL || _CMD))) { //DELETE\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._deleteSelectedAnchors();\n\t\t\t\t}\n\t\t\t} else if ((key === \"a\" || key === 65) && (_CMD || _CTRL)) { //SELECT ALL\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i].select(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t_doc.addEventListener(\"keyup\", function(e) {\n\t\t\tlet key = e.key || e.which;\n\t\t\tif (key === \"Shift\" || key === 16) {\n\t\t\t\t_SHIFT = false;\n\t\t\t} else if (key === \"Control\" || key === 17) {\n\t\t\t\t_CTRL = false;\n\t\t\t} else if (key === \"Meta\" || key === 91) {\n\t\t\t\t_CMD = false;\n\t\t\t} else if (key === \"Alt\" || key === 18) {\n\t\t\t\t_ALT = false;\n\t\t\t\tlet i = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._onReleaseAlt();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t_addListener(_doc, \"mouseup\", _checkDeselect);\n\t\t_addListener(_doc, \"touchend\", _checkDeselect);\n\t\t_coreInitted = 1;\n\t},\n\t_onPress = function(e) {\n\t\tlet self = this,\n\t\t\tctm = getGlobalMatrix(self.target.parentNode, true), //previously used self.target.parentNode.getScreenCTM().inverse() but there's a major bug in Firefox that prevents it from working properly when there's an ancestor with a transform applied, so we bootstrapped our own solution that seems ot work great across all browsers.\n\t\t\ttouchEventTarget, temp;\n\t\tthis._matrix = this.target.transform.baseVal.getItem(0).matrix;\n\t\tthis._ctm = ctm;\n\t\tif (_touchEventLookup[e.type]) { //note: on iOS, BOTH touchmove and mousemove are dispatched, but the mousemove has pageY and pageX of 0 which would mess up the calculations and needlessly hurt performance.\n\t\t\ttouchEventTarget = (e.type.indexOf(\"touch\") !== -1) ? (e.currentTarget || e.target) : _doc; //pointer-based touches (for Microsoft browsers) don't remain locked to the original target like other browsers, so we must use the document instead. The event type would be \"MSPointerDown\" or \"pointerdown\".\n\t\t\t_addListener(touchEventTarget, \"touchend\", self._onRelease);\n\t\t\t_addListener(touchEventTarget, \"touchmove\", self._onMove);\n\t\t\t_addListener(touchEventTarget, \"touchcancel\", self._onRelease);\n\t\t\t_addListener(_doc, \"touchstart\", _onMultiTouchDocument);\n\t\t} else {\n\t\t\ttouchEventTarget = null;\n\t\t\t_addListener(_doc, \"mousemove\", self._onMove); //attach these to the document instead of the box itself so that if the user's mouse moves too quickly (and off of the box), things still work.\n\t\t}\n\t\t_addListener(_doc, \"mouseup\", self._onRelease);\n\t\te.preventDefault();\n\t\tif (e.preventManipulation) {\n\t\t\te.preventManipulation();  //for some Microsoft browsers\n\t\t}\n\t\tif (e.changedTouches) { //touch events store the data slightly differently\n\t\t\te = self.touch = e.changedTouches[0];\n\t\t\tself.touchID = e.identifier;\n\t\t} else if (e.pointerId) {\n\t\t\tself.touchID = e.pointerId; //for some Microsoft browsers\n\t\t} else {\n\t\t\tself.touch = self.touchID = null;\n\t\t}\n\t\tself._startPointerY = self.pointerY = e.pageY; //record the starting x and y so that we can calculate the movement from the original in _onMouseMove\n\t\tself._startPointerX = self.pointerX = e.pageX;\n\t\tself._startElementX = self._matrix.e;\n\t\tself._startElementY = self._matrix.f;\n\n\t\tif (this._ctm.a === 1 && this._ctm.b === 0 && this._ctm.c === 0 && this._ctm.d === 1) {\n\t\t\tthis._ctm = null;\n\t\t} else {\n\t\t\ttemp = self._startPointerX * this._ctm.a + self._startPointerY * this._ctm.c + this._ctm.e;\n\t\t\tself._startPointerY = self._startPointerX * this._ctm.b + self._startPointerY * this._ctm.d + this._ctm.f;\n\t\t\tself._startPointerX = temp;\n\t\t}\n\n\t\tself.isPressed = _isPressed = true;\n\t\tself.touchEventTarget = touchEventTarget;\n\t\tif (self.vars.onPress) {\n\t\t\tself.vars.onPress.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t},\n\t_onMove = function(e) {\n\t\tlet self = this,\n\t\t\toriginalEvent = e,\n\t\t\ttouches, i;\n\t\tif (!self._enabled || _isMultiTouching || !self.isPressed || !e) {\n\t\t\treturn;\n\t\t}\n\t\tself.pointerEvent = e;\n\t\ttouches = e.changedTouches;\n\t\tif (touches) { //touch events store the data slightly differently\n\t\t\te = touches[0];\n\t\t\tif (e !== self.touch && e.identifier !== self.touchID) { //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)\n\t\t\t\ti = touches.length;\n\t\t\t\twhile (--i > -1 && (e = touches[i]).identifier !== self.touchID) {}\n\t\t\t\tif (i < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (e.pointerId && self.touchID && e.pointerId !== self.touchID) { //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)\n\t\t\treturn;\n\t\t}\n\t\toriginalEvent.preventDefault();\n\t\tif (originalEvent.preventManipulation) { //for some Microsoft browsers\n\t\t\toriginalEvent.preventManipulation();\n\t\t}\n\t\tself.setPointerPosition(e.pageX, e.pageY);\n\t\tif (self.vars.onDrag) {\n\t\t\tself.vars.onDrag.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t},\n\t_onRelease = function(e, force) {\n\t\tlet self = this;\n\t\tif (!self._enabled || !self.isPressed || (e && self.touchID != null && !force && ((e.pointerId && e.pointerId !== self.touchID) || (e.changedTouches && !_hasTouchID(e.changedTouches, self.touchID))))) {  //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)\n\t\t\treturn;\n\t\t}\n\t\t_interacted();\n\t\tself.isPressed = _isPressed = false; //TODO: if we want to accommodate multi-touch, we'd need to introduce a counter to track how many touches there are and only toggle this when they're all off.\n\t\tlet originalEvent = e,\n\t\t\twasDragging = self.isDragging,\n\t\t\ttouchEventTarget = self.touchEventTarget,\n\t\t\ttouches, i;\n\t\tif (touchEventTarget) {\n\t\t\t_removeListener(touchEventTarget, \"touchend\", self._onRelease);\n\t\t\t_removeListener(touchEventTarget, \"touchmove\", self._onMove);\n\t\t\t_removeListener(touchEventTarget, \"touchcancel\", self._onRelease);\n\t\t\t_removeListener(_doc, \"touchstart\", _onMultiTouchDocument);\n\t\t} else {\n\t\t\t_removeListener(_doc, \"mousemove\", self._onMove);\n\t\t}\n\t\t_removeListener(_doc, \"mouseup\", self._onRelease);\n\t\tif (e && e.target) {\n\t\t\t_removeListener(e.target, \"mouseup\", self._onRelease);\n\t\t}\n\t\tif (wasDragging) {\n\t\t\tself.isDragging = false;\n\t\t} else if (self.vars.onClick) {\n\t\t\tself.vars.onClick.call(self.vars.callbackScope || self, originalEvent);\n\t\t}\n\t\tif (e) {\n\t\t\ttouches = e.changedTouches;\n\t\t\tif (touches) { //touch events store the data slightly differently\n\t\t\t\te = touches[0];\n\t\t\t\tif (e !== self.touch && e.identifier !== self.touchID) { //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)\n\t\t\t\t\ti = touches.length;\n\t\t\t\t\twhile (--i > -1 && (e = touches[i]).identifier !== self.touchID) {}\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.pointerEvent = originalEvent;\n\t\t\tself.pointerX = e.pageX;\n\t\t\tself.pointerY = e.pageY;\n\t\t}\n\t\tif (originalEvent && !wasDragging && self.vars.onDragRelease) {\n\t\t\tself.vars.onDragRelease.call(self, self.pointerEvent);\n\n\t\t} else {\n\t\t\tif (originalEvent) {\n\t\t\t\toriginalEvent.preventDefault();\n\t\t\t\tif (originalEvent.preventManipulation) {\n\t\t\t\t\toriginalEvent.preventManipulation();  //for some Microsoft browsers\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (self.vars.onRelease) {\n\t\t\t\tself.vars.onRelease.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t\t}\n\t\t}\n\t\tif (wasDragging && self.vars.onDragEnd) {\n\t\t\tself.vars.onDragEnd.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t\treturn true;\n\t},\n\t_createSegmentAnchors = (rawPath, j, editor, vars) => {\n\t\tlet segment = rawPath[j],\n\t\t\tl = segment.length,\n\t\t\ta = [],\n\t\t\ti;\n\t\tfor (i = 0; i < l; i+=6) {\n\t\t\ta.push(new Anchor(editor, rawPath, j, i, vars));\n\t\t}\n\t\treturn a;\n\t},\n\t_getLength = (segment, i, i2) => { //i is the starting index, and it'll return the length to the next x/y pair. So if you're looking for the length to handle1, you'd feed in the index of the handle control point x whereas if you're looking for the length to handle2, i would be the x of the anchor.\n\t\tlet x = segment[i2] - segment[i],\n\t\t\ty = segment[i2+1] - segment[i+1];\n\t\treturn Math.sqrt(x * x + y * y);\n\t};\n\n\nclass DraggableSVG {\n\n\tconstructor(target, vars) {\n\t\tthis.target = (typeof(target) === \"string\") ? _doc.querySelectorAll(target)[0] : target;\n\t\tthis.vars = vars || {};\n\t\tthis._onPress = _bind(_onPress, this);\n\t\tthis._onMove = _bind(_onMove, this);\n\t\tthis._onRelease = _bind(_onRelease, this);\n\t\tthis.target.setAttribute(\"transform\", (this.target.getAttribute(\"transform\") || \"\") + \" translate(0,0)\");\n\t\tthis._matrix = this.target.transform.baseVal.getItem(0).matrix;\n\t\tthis.x = this._matrix.e;\n\t\tthis.y = this._matrix.f;\n\t\tthis.snap = vars.snap;\n\t\tif (!isNaN(vars.maxX) || !isNaN(vars.minX)) {\n\t\t\tthis._bounds = 1;\n\t\t\tthis.maxX = +vars.maxX;\n\t\t\tthis.minX = +vars.minX;\n\t\t} else {\n\t\t\tthis._bounds = 0;\n\t\t}\n\t\tthis.enabled(true);\n\t}\n\n\tsetPointerPosition(pointerX, pointerY) {\n\t\tlet rnd = 1000,\n\t\t\txChange, yChange, x, y, temp;\n\t\tthis.pointerX = pointerX;\n\t\tthis.pointerY = pointerY;\n\t\tif (this._ctm) {\n\t\t\ttemp = pointerX * this._ctm.a + pointerY * this._ctm.c + this._ctm.e;\n\t\t\tpointerY = pointerX * this._ctm.b + pointerY * this._ctm.d + this._ctm.f;\n\t\t\tpointerX = temp;\n\t\t}\n\t\tyChange = (pointerY - this._startPointerY);\n\t\txChange = (pointerX - this._startPointerX);\n\t\tif (yChange < _minimumMovement && yChange > -_minimumMovement) {\n\t\t\tyChange = 0;\n\t\t}\n\t\tif (xChange < _minimumMovement && xChange > -_minimumMovement) {\n\t\t\txChange = 0;\n\t\t}\n\t\tx = (((this._startElementX + xChange) * rnd) | 0) / rnd;\n\t\ty = (((this._startElementY + yChange) * rnd) | 0) / rnd;\n\t\tif (this.snap && !_SHIFT) {\n\t\t\t_point.x = x;\n\t\t\t_point.y = y;\n\t\t\tthis.snap.call(this, _point);\n\t\t\tx = _point.x;\n\t\t\ty = _point.y;\n\t\t}\n\t\tif (this.x !== x || this.y !== y) {\n\t\t\tthis._matrix.f = this.y = y;\n\t\t\tthis._matrix.e = this.x = x;\n\t\t\tif (!this.isDragging && this.isPressed) {\n\t\t\t\tthis.isDragging = true;\n\t\t\t\t_callback(\"onDragStart\", this, this.pointerEvent);\n\t\t\t}\n\t\t}\n\t}\n\n\tenabled(enabled) {\n\t\tif (!arguments.length) {\n\t\t\treturn this._enabled;\n\t\t}\n\t\tlet dragging;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\t_addListener(this.target, \"mousedown\", this._onPress);\n\t\t\t_addListener(this.target, \"touchstart\", this._onPress);\n\t\t\t_addListener(this.target, \"click\", this._onClick, true); //note: used to pass true for capture but it prevented click-to-play-video functionality in Firefox.\n\t\t} else {\n\t\t\tdragging = this.isDragging;\n\t\t\t_removeListener(this.target, \"mousedown\", this._onPress);\n\t\t\t_removeListener(this.target, \"touchstart\", this._onPress);\n\t\t\t_removeListener(this.target, \"click\", this._onClick);\n\t\t\tif (this.touchEventTarget) {\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchcancel\", this._onRelease);\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchend\", this._onRelease);\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchmove\", this._onMove);\n\t\t\t}\n\t\t\t_removeListener(_doc, \"mouseup\", this._onRelease);\n\t\t\t_removeListener(_doc, \"mousemove\", this._onMove);\n\t\t\tthis.isDragging = this.isPressed = false;\n\t\t\tif (dragging) {\n\t\t\t\t_callback(\"onDragEnd\", this, this.pointerEvent);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tendDrag(e) {\n\t\tthis._onRelease(e);\n\t}\n\n}\n\n\n\n\n\nclass Anchor {\n\n\tconstructor(editor, rawPath, j, i, vars) {\n\t\tthis.editor = editor;\n\t\tthis.element = _createSVG(\"path\", editor._selection, {fill:_selectionColor, stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis.update(rawPath, j, i);\n\t\tthis.element._gsSelection = true;\n\t\tthis.vars = vars || {};\n\t\tthis._draggable = new DraggableSVG(this.element, {callbackScope:this, onDrag:this.onDrag, snap:this.vars.snap, onPress:this.onPress, onRelease:this.onRelease, onClick:this.onClick, onDragEnd:this.onDragEnd});\n\t}\n\n\tonPress() {\n\t\t_callback(\"onPress\", this);\n\t}\n\n\tonClick() {\n\t\t_callback(\"onClick\", this);\n\t}\n\n\tonDrag() {\n\t\tlet s = this.segment;\n\t\tthis.vars.onDrag.call(this.vars.callbackScope || this, this, this._draggable.x - s[this.i], this._draggable.y - s[this.i+1]);\n\t}\n\n\tonDragEnd() {\n\t\t_callback(\"onDragEnd\", this);\n\t}\n\n\tonRelease() {\n\t\t_callback(\"onRelease\", this);\n\t}\n\n\tupdate(rawPath, j, i) {\n\t\tif (rawPath) {\n\t\t\tthis.rawPath = rawPath;\n\t\t}\n\t\tif (arguments.length <= 1) {\n\t\t\tj = this.j;\n\t\t\ti = this.i;\n\t\t} else {\n\t\t\tthis.j = j;\n\t\t\tthis.i = i;\n\t\t}\n\t\tlet prevSmooth = this.smooth,\n\t\t\tsegment = this.rawPath[j];\n\t\tthis.segment = segment;\n\t\tthis.smooth = (i && i < segment.length - 2 && Math.abs(Math.atan2(segment[i+1] - segment[i-1], segment[i] - segment[i-2]) - Math.atan2(segment[i+3] - segment[i+1], segment[i+2] - segment[i])) < 0.09) ? 2 : 0; //0: corner, 1: smooth but not mirrored, 2: smooth and mirrored.\n\t\tif (this.smooth !== prevSmooth) {\n\t\t\tthis.element.setAttribute(\"d\", this.smooth ? this.editor._circleHandle : this.editor._squareHandle);\n\t\t}\n\t\tthis.element.setAttribute(\"transform\", \"translate(\" + segment[i] + \",\" + segment[i+1] + \")\");\n\t}\n}\n\n\n\n\nexport class PathEditor {\n\n\tconstructor(target, vars) {\n\t\tvars = vars || {};\n\t\tif (!_coreInitted) {\n\t\t\t_initCore();\n\t\t}\n\t\tthis.vars = vars;\n\t\tthis.path = (typeof(target) === \"string\") ? _doc.querySelectorAll(target)[0] : target;\n\t\tthis._selectionHittest = _createSVG(\"path\", this.path.ownerSVGElement, {stroke:\"transparent\", strokeWidth:16, fill:\"none\", vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._selection = vars._selection || _createSVG(\"g\", this.path.ownerSVGElement, {class:\"path-editor-selection path-editor\"});\n\t\tthis._selectionPath = _createSVG(\"path\", this._selection, {stroke:_selectionColor, strokeWidth:2, fill:\"none\", vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._selectedAnchors = [];\n\t\tthis._line1 = _createSVG(\"polyline\", this._selection, {stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._line2 = _createSVG(\"polyline\", this._selection, {stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._line1.style.pointerEvents = this._line2.style.pointerEvents = this._selectionPath.style.pointerEvents = \"none\";\n\t\tthis._enabled = true;\n\t\tlet ctm = this.path.parentNode.getScreenCTM().inverse(),\n\t\t\tsize = (ctm.a + ctm.d) / 2 * (vars.handleSize || 5);\n\t\tthis._squareHandle = _getSquarePathData(size);\n\t\tthis._circleHandle = _getCirclePathData(size * 1.15);\n\t\tthis._handle1 = _createSVG(\"path\", this._selection, {d:this._squareHandle, fill:_selectionColor, stroke:\"transparent\", strokeWidth:6});\n\t\tthis._handle2 = _createSVG(\"path\", this._selection, {d:this._squareHandle, fill:_selectionColor, stroke:\"transparent\", strokeWidth:6});\n\t\tthis._handle1._draggable = new DraggableSVG(this._handle1, {onDrag:this._onDragHandle1, callbackScope:this, onPress:this._onPressHandle1, onRelease:this._onReleaseHandle, onClick:this._onClickHandle1, snap:vars.handleSnap});\n\t\tthis._handle2._draggable = new DraggableSVG(this._handle2, {onDrag:this._onDragHandle2, callbackScope:this, onPress:this._onPressHandle2, onRelease:this._onReleaseHandle, onClick:this._onClickHandle2, snap:vars.handleSnap});\n\t\tthis._handle1.style.visibility = this._handle2.style.visibility = \"hidden\";\n\t\tlet selectionItems = [this._handle1, this._handle2, this._line1, this._line2, this._selection, this._selectionPath, this._selectionHittest],\n\t\t\ti = selectionItems.length;\n\t\twhile (--i > -1) {\n\t\t\tselectionItems[i]._gsSelection = true; //just a flag we can check in the _checkDeselect() method to detect clicks on things that are selection-related.\n\t\t}\n\t\tif (vars.draggable !== false) {\n\t\t\tthis._draggable = new DraggableSVG(this._selectionHittest, {callbackScope:this, onPress:this.select, onRelease:this._onRelease, onDrag:this._onDragPath, onDragEnd:this._saveState, maxX:this.vars.maxX, minX:this.vars.minX});\n\t\t}\n\t\tthis.init();\n\t\tthis._selection.style.visibility = (vars.selected === false) ? \"hidden\" : \"visible\";\n\t\tif (vars.selected !== false) {\n\t\t\tthis.path._gsSelection = true;\n\t\t\t_selectedPaths.push(this);\n\t\t}\n\t\tthis._saveState();\n\t\t_addListener(this._selectionHittest, \"mousedown\", _bind(this._onClickSelectionPath, this));\n\t\t_addListener(this._selectionHittest, \"touchstart\", _bind(this._onClickSelectionPath, this));\n\t\t_addListener(this._selectionHittest, \"mouseup\", _bind(this._onRelease, this));\n\t\t_addListener(this._selectionHittest, \"touchend\", _bind(this._onRelease, this));\n\t}\n\n\t_onRelease(e) {\n\t\tlet anchor = this._editingAnchor;\n\t\tif (anchor) {\n\t\t\t_editingAxis.x = anchor.segment[anchor.i];\n\t\t\t_editingAxis.y = anchor.segment[anchor.i+1];\n\t\t}\n\t\t_callback(\"onRelease\", this, e);\n\t}\n\n\tinit() {\n\t\tlet pathData = this.path.getAttribute(\"d\"),\n\t\t\trawPath = stringToRawPath(pathData),\n\t\t\tcreateAnchors = (!this._rawPath || rawPath.totalPoints !== this._rawPath.totalPoints || rawPath.length !== this._rawPath.length),\n\t\t\tanchorVars = {callbackScope:this, snap:this.vars.anchorSnap, onDrag:this._onDragAnchor, onPress:this._onPressAnchor, onRelease:this._onRelease, onClick:this._onClickAnchor, onDragEnd:this._onDragEndAnchor, maxX:this.vars.maxX, minX:this.vars.minX},\n\t\t\tl, i;\n\n\t\tif (createAnchors && this._anchors && this._anchors.length) {\n\t\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\t\tthis._anchors[i].element.parentNode.removeChild(this._anchors[i].element);\n\t\t\t\tthis._anchors[i]._draggable.enabled(false);\n\t\t\t}\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t}\n\t\tthis._rawPath = rawPath;\n\t\tif (createAnchors) {\n\t\t\tthis._anchors = _createSegmentAnchors(rawPath, 0, this, anchorVars);\n\t\t\tl = rawPath.length;\n\t\t\tif (l > 1) {\n\t\t\t\tfor (i = 1; i < l; i++) {\n\t\t\t\t\tthis._anchors = this._anchors.concat(_createSegmentAnchors(rawPath, i, this, anchorVars));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ti = this._anchors.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tthis._anchors[i].update(rawPath);\n\t\t\t}\n\t\t}\n\n\t\tthis._selection.appendChild(this._handle1); //for stacking order (handles should always be on top)\n\t\tthis._selection.appendChild(this._handle2);\n\t\t//\t\tthis._selectedAnchors.length = 0;\n\t\tthis._selectionPath.setAttribute(\"d\", pathData);\n\t\tthis._selectionHittest.setAttribute(\"d\", pathData);\n\t\tthis._selection.setAttribute(\"transform\", this.path.getAttribute(\"transform\") || \"translate(0,0)\");\n\t\tthis._selectionHittest.setAttribute(\"transform\", this._selection.getAttribute(\"transform\"));\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\t_saveState() {\n\t\t_addHistory(this);\n\t}\n\n\t_onClickSelectionPath(e) {\n\t\tif (this._selection.style.visibility === \"hidden\") {\n\t\t\tthis.select();\n\t\t} else if (_ALT || (e && e.altKey)) {\n\t\t\tlet anchorVars = {callbackScope:this, snap:this.vars.anchorSnap, onDrag:this._onDragAnchor, onPress:this._onPressAnchor, onRelease:this._onRelease, onClick:this._onClickAnchor, onDragEnd:this._onDragEndAnchor, maxX:this.vars.maxX, minX:this.vars.minX},\n\t\t\t\tctm = this._selection.getScreenCTM().inverse(),\n\t\t\t\tnewIndex, i, anchor, x, y, closestData;\n\t\t\tif (this._draggable) {\n\t\t\t\tthis._draggable._onRelease(e); //otherwise, ALT-click/dragging on a path would create a new anchor AND drag the entire path.\n\t\t\t}\n\t\t\tif (ctm) {\n\t\t\t\tx = e.clientX * ctm.a + e.clientY * ctm.c + ctm.e;\n\t\t\t\ty = e.clientX * ctm.b + e.clientY * ctm.d + ctm.f;\n\t\t\t}\n\t\t\t//DEBUG: _createSVG(\"circle\", this._selection, {fill:\"red\", r:5, cx:x, cy:y});\n\t\t\tclosestData = getClosestData(this._rawPath, x, y);\n\t\t\tsubdivideSegment(this._rawPath[closestData.j], closestData.i, closestData.t);\n\t\t\tnewIndex = closestData.i + 6;\n\t\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\t\tif (this._anchors[i].i >= newIndex) {\n\t\t\t\t\tthis._anchors[i].i += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\tanchor = new Anchor(this, this._rawPath, closestData.j, newIndex, anchorVars);\n\t\t\tthis._selection.appendChild(this._handle1); //for stacking order (handles should always be on top)\n\t\t\tthis._selection.appendChild(this._handle2);\n\t\t\tanchor._draggable._onPress(e);\n\t\t\t_recentlyAddedAnchor = anchor;\n\t\t\tthis._anchors.push(anchor);\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t\tthis._updateAnchors();\n\t\t\tthis.update();\n\t\t\tthis._saveState();\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onClickHandle1() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ti = anchor.i,\n\t\t\ts = anchor.segment;\n\t\tif (_ALT && Math.abs(s[i] - s[i-2]) < 5 && Math.abs(s[i+1] - s[i-1]) < 5) {\n\t\t\tthis._onClickAnchor(anchor);\n\t\t}\n\t}\n\n\t_onClickHandle2() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ti = anchor.i,\n\t\t\ts = anchor.segment;\n\t\tif (_ALT && Math.abs(s[i] - s[i+2]) < 5 && Math.abs(s[i+1] - s[i+3]) < 5) {\n\t\t\tthis._onClickAnchor(anchor);\n\t\t}\n\t}\n\n\t_onDragEndAnchor(e) {\n\t\t_recentlyAddedAnchor = null;\n\t\tthis._saveState();\n\t}\n\n\tisSelected() {\n\t\treturn (this._selectedAnchors.length > 0);\n\t}\n\n\tselect(allAnchors) {\n\t\tthis._selection.style.visibility = \"visible\";\n\t\tthis._editingAnchor = null;\n\t\tthis.path._gsSelection = true;\n\t\tif (allAnchors === true) {\n\t\t\tlet i = this._anchors.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tthis._selectedAnchors[i] = this._anchors[i];\n\t\t\t}\n\t\t}\n\t\tif (_selectedPaths.indexOf(this) === -1) {\n\t\t\t_selectedPaths.push(this);\n\t\t}\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\tdeselect() {\n\t\tthis._selection.style.visibility = \"hidden\";\n\t\tthis._selectedAnchors.length = 0;\n\t\tthis._editingAnchor = null;\n\t\tthis.path._gsSelection = false;\n\t\t_selectedPaths.splice(_selectedPaths.indexOf(this), 1);\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\t_onDragPath(e) {\n\t\tlet transform = this._selectionHittest.getAttribute(\"transform\") || \"translate(0,0)\";\n\t\tthis._selection.setAttribute(\"transform\", transform);\n\t\tthis.path.setAttribute(\"transform\", transform);\n\t}\n\n\t_onPressAnchor(anchor) {\n\t\tif (this._selectedAnchors.indexOf(anchor) === -1) { //if it isn't already selected...\n\t\t\tif (!_SHIFT) {\n\t\t\t\tthis._selectedAnchors.length = 0;\n\t\t\t}\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t} else if (_SHIFT) {\n\t\t\tthis._selectedAnchors.splice(this._selectedAnchors.indexOf(anchor), 1);\n\t\t\tanchor._draggable.endDrag();\n\t\t}\n\t\t_editingAxis.x = anchor.segment[anchor.i];\n\t\t_editingAxis.y = anchor.segment[anchor.i+1];\n\t\tthis._updateAnchors();\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_deleteSelectedAnchors() {\n\t\tlet anchors = this._selectedAnchors,\n\t\t\ti = anchors.length,\n\t\t\tanchor, index, j;\n\t\twhile (--i > -1) {\n\t\t\tanchor = anchors[i];\n\t\t\tanchor.element.parentNode.removeChild(anchor.element);\n\t\t\tanchor._draggable.enabled(false);\n\t\t\tindex = anchor.i;\n\t\t\tif (!index) { //first\n\t\t\t\tanchor.segment.splice(index, 6);\n\t\t\t} else if (index < anchor.segment.length - 2) {\n\t\t\t\tanchor.segment.splice(index-2, 6);\n\t\t\t} else { //last\n\t\t\t\tanchor.segment.splice(index-4, 6);\n\t\t\t}\n\t\t\tanchors.splice(i, 1);\n\t\t\tthis._anchors.splice(this._anchors.indexOf(anchor), 1);\n\t\t\tfor (j = 0; j < this._anchors.length; j++) {\n\t\t\t\tif (this._anchors[j].i >= index) {\n\t\t\t\t\tthis._anchors[j].i -= 6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updateAnchors();\n\t\tthis.update();\n\t\tthis._saveState();\n\t\tif (this.vars.onDeleteAnchor) {\n\t\t\tthis.vars.onDeleteAnchor.call(this.vars.callbackScope || this);\n\t\t}\n\t}\n\n\t_onClickAnchor(anchor) {\n\t\tlet i = anchor.i,\n\t\t\tsegment = anchor.segment,\n\t\t\trnd = 1000,\n\t\t\tisEnd = (!i || i >= segment.length - 2),\n\t\t\tangle1, angle2, length1, length2, sin, cos;\n\t\tif (_ALT && _recentlyAddedAnchor !== anchor && this._editingAnchor) {\n\t\t\tanchor.smooth = !anchor.smooth;\n\t\t\tif (isEnd) { //the very ends can't be \"smooth\"\n\t\t\t\tanchor.smooth = false;\n\t\t\t}\n\t\t\tanchor.element.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t\tif (anchor.smooth && !isEnd) {\n\t\t\t\tangle1 = Math.atan2(segment[i+1] - segment[i-1], segment[i] - segment[i-2]);\n\t\t\t\tangle2 = Math.atan2(segment[i+3] - segment[i+1], segment[i+2] - segment[i]);\n\t\t\t\tangle1 = (angle1 + angle2) / 2;\n\t\t\t\tlength1 = _getLength(segment, i-2, i);\n\t\t\t\tlength2 = _getLength(segment, i, i+2);\n\t\t\t\tif (length1 < 0.2) {\n\t\t\t\t\tlength1 = (_getLength(segment, i, i-6) / 4);\n\t\t\t\t\tangle1 = angle2 || Math.atan2(segment[i+7] - segment[i-5], segment[i+6] - segment[i-6]);\n\t\t\t\t}\n\t\t\t\tif (length2 < 0.2) {\n\t\t\t\t\tlength2 = (_getLength(segment, i, i+6) / 4);\n\t\t\t\t\tangle2 = angle1 || Math.atan2(segment[i+7] - segment[i-5], segment[i+6] - segment[i-6]);\n\t\t\t\t}\n\t\t\t\tsin = Math.sin(angle1);\n\t\t\t\tcos = Math.cos(angle1);\n\t\t\t\tif (Math.abs(angle2 - angle1) < Math.PI / 2) {\n\t\t\t\t\tsin = -sin;\n\t\t\t\t\tcos = -cos;\n\t\t\t\t}\n\t\t\t\tsegment[i-2] = (((segment[i] + cos * length1) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i-1] = (((segment[i+1] + sin * length1) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i+2] = (((segment[i] - cos * length2) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i+3] = (((segment[i+1] - sin * length2) * rnd) | 0) / rnd;\n\t\t\t\tthis._updateAnchors();\n\t\t\t\tthis.update();\n\t\t\t\tthis._saveState();\n\t\t\t} else if (!anchor.smooth && !isEnd) {\n\t\t\t\tif (i) {\n\t\t\t\t\tsegment[i-2] = segment[i];\n\t\t\t\t\tsegment[i-1] = segment[i+1];\n\t\t\t\t}\n\t\t\t\tif (i < segment.length - 2) {\n\t\t\t\t\tsegment[i+2] = segment[i];\n\t\t\t\t\tsegment[i+3] = segment[i+1];\n\t\t\t\t}\n\t\t\t\tthis._updateAnchors();\n\t\t\t\tthis.update();\n\t\t\t\tthis._saveState();\n\t\t\t}\n\t\t} else if (!_SHIFT) {\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t}\n\t\t_recentlyAddedAnchor = null;\n\t\tthis._updateAnchors();\n\t}\n\n\t_updateAnchors() {\n\t\tlet anchor = (this._selectedAnchors.length === 1) ? this._selectedAnchors[0] : null,\n\t\t\tsegment = anchor ? anchor.segment : null,\n\t\t\ti, x, y;\n\t\tthis._editingAnchor = anchor;\n\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\tthis._anchors[i].element.style.fill = (this._selectedAnchors.indexOf(this._anchors[i]) !== -1) ? _selectionColor : \"white\";\n\t\t\t//this._anchors[i].element.setAttribute(\"fill\", (this._selectedAnchors.indexOf(this._anchors[i]) !== -1) ? _selectionColor : \"white\");\n\t\t}\n\t\tif (anchor) {\n\t\t\tthis._handle1.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t\tthis._handle2.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t}\n\t\ti = anchor ? anchor.i : 0;\n\t\tif (anchor && i) {\n\t\t\tx = segment[i-2];\n\t\t\ty = segment[i-1]; //TODO: if they equal the anchor coordinates, just hide it.\n\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = (!_ALT && x === segment[i] && y === segment[i+1]) ? \"hidden\" : \"visible\";\n\t\t\tthis._handle1.setAttribute(\"transform\", \"translate(\" + x + _comma + y + \")\");\n\t\t\tthis._line1.setAttribute(\"points\",  x + _comma + y + _comma + segment[i] + _comma + segment[i+1]);\n\t\t} else {\n\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"hidden\";\n\t\t}\n\t\tif (anchor && i < segment.length - 2) {\n\t\t\tx = segment[i+2];\n\t\t\ty = segment[i+3];\n\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = (!_ALT && x === segment[i] && y === segment[i+1]) ? \"hidden\" : \"visible\";\n\t\t\tthis._handle2.setAttribute(\"transform\", \"translate(\" + x + _comma + y + \")\");\n\t\t\tthis._line2.setAttribute(\"points\",  segment[i] + _comma + segment[i+1] + _comma + x + _comma + y);\n\n\t\t} else {\n\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"hidden\";\n\t\t}\n\t}\n\n\t_onPressAlt() {\n\t\tlet anchor = this._editingAnchor;\n\t\tif (anchor) {\n\t\t\tif (anchor.i) {\n\t\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"visible\";\n\t\t\t}\n\t\t\tif (anchor.i < anchor.segment.length - 2) {\n\t\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"visible\";\n\t\t\t}\n\t\t}\n\t}\n\n\t_onReleaseAlt() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts, i;\n\t\tif (anchor) {\n\t\t\ts = anchor.segment;\n\t\t\ti = anchor.i;\n\t\t\tif (s[i] === s[i-2] && s[i+1] === s[i-1]) {\n\t\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"hidden\";\n\t\t\t}\n\t\t\tif (s[i] === s[i+2] && s[i+1] === s[i+3]) {\n\t\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\t}\n\n\t_onPressHandle1() {\n\t\tif (this._editingAnchor.smooth) {\n\t\t\tthis._oppositeHandleLength = _getLength(this._editingAnchor.segment, this._editingAnchor.i, this._editingAnchor.i+2);\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onPressHandle2() {\n\t\tif (this._editingAnchor.smooth) {\n\t\t\tthis._oppositeHandleLength = _getLength(this._editingAnchor.segment, this._editingAnchor.i-2, this._editingAnchor.i);\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onReleaseHandle(e) {\n\t\tthis._onRelease(e);\n\t\tthis._saveState();\n\t}\n\n\t_onDragHandle1() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts = anchor.segment,\n\t\t\ti = anchor.i,\n\t\t\trnd = 1000,\n\t\t\tx = this._handle1._draggable.x,\n\t\t\ty = this._handle1._draggable.y,\n\t\t\tangle;\n\t\ts[i-2] = x = ((x * rnd) | 0) / rnd;\n\t\ts[i-1] = y = ((y * rnd) | 0) / rnd;\n\t\tif (anchor.smooth) {\n\t\t\tif (_ALT) {\n\t\t\t\tanchor.smooth = false;\n\t\t\t\tanchor.element.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle1.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle2.setAttribute(\"d\", this._squareHandle);\n\t\t\t} else {\n\t\t\t\tangle = Math.atan2(s[i+1] - y, s[i] - x);\n\t\t\t\tx = this._oppositeHandleLength * Math.cos(angle);\n\t\t\t\ty = this._oppositeHandleLength * Math.sin(angle);\n\t\t\t\ts[i+2] = (((s[i] + x) * rnd) | 0) / rnd;\n\t\t\t\ts[i+3] = (((s[i+1] + y) * rnd) | 0) / rnd;\n\t\t\t}\n\n\t\t}\n\t\tthis.update();\n\t}\n\n\t_onDragHandle2() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts = anchor.segment,\n\t\t\ti = anchor.i,\n\t\t\trnd = 1000,\n\t\t\tx = this._handle2._draggable.x,\n\t\t\ty = this._handle2._draggable.y,\n\t\t\tangle;\n\t\ts[i+2] = x = ((x * rnd) | 0) / rnd;\n\t\ts[i+3] = y = ((y * rnd) | 0) / rnd;\n\t\tif (anchor.smooth) {\n\t\t\tif (_ALT) {\n\t\t\t\tanchor.smooth = false;\n\t\t\t\tanchor.element.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle1.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle2.setAttribute(\"d\", this._squareHandle);\n\t\t\t} else {\n\t\t\t\tangle = Math.atan2(s[i+1] - y, s[i] - x);\n\t\t\t\tx = this._oppositeHandleLength * Math.cos(angle);\n\t\t\t\ty = this._oppositeHandleLength * Math.sin(angle);\n\t\t\t\ts[i-2] = (((s[i] + x) * rnd) | 0) / rnd;\n\t\t\t\ts[i-1] = (((s[i+1] + y) * rnd) | 0) / rnd;\n\t\t\t}\n\n\t\t}\n\t\tthis.update();\n\t}\n\n\t_onDragAnchor(anchor, changeX, changeY) {\n\t\tlet anchors = this._selectedAnchors,\n\t\t\tl = anchors.length,\n\t\t\trnd = 1000,\n\t\t\ti, j, s, a;\n\t\tfor (j = 0; j < l; j++) {\n\t\t\ta = anchors[j];\n\t\t\ti = a.i;\n\t\t\ts = a.segment;\n\t\t\tif (i) {\n\t\t\t\ts[i-2] = (((s[i-2] + changeX) * rnd) | 0) / rnd;\n\t\t\t\ts[i-1] = (((s[i-1] + changeY) * rnd) | 0) / rnd;\n\t\t\t}\n\t\t\ts[i] = (((s[i] + changeX) * rnd) | 0) / rnd;\n\t\t\ts[i+1] = (((s[i+1] + changeY) * rnd) | 0) / rnd;\n\t\t\tif (i < s.length - 2) {\n\t\t\t\ts[i+2] = (((s[i+2] + changeX) * rnd) | 0) / rnd;\n\t\t\t\ts[i+3] = (((s[i+3] + changeY) * rnd) | 0) / rnd;\n\t\t\t}\n\t\t\tif (a !== anchor) {\n\t\t\t\ta.element.setAttribute(\"transform\", \"translate(\" + (s[i]) + _comma + (s[i+1]) + \")\");\n\t\t\t}\n\t\t}\n\t\tthis.update();\n\t}\n\n\tenabled(enabled) {\n\t\tif (!arguments.length) {\n\t\t\treturn this._enabled;\n\t\t}\n\t\tlet i = this._anchors.length;\n\t\twhile (--i > -1) {\n\t\t\tthis._anchors[i]._draggable.enabled(enabled);\n\t\t}\n\t\tthis._enabled = enabled;\n\t\tthis._handle1._draggable.enabled(enabled);\n\t\tthis._handle2._draggable.enabled(enabled);\n\t\tif (this._draggable) {\n\t\t\tthis._draggable.enabled(enabled);\n\t\t}\n\t\tif (!enabled) {\n\t\t\tthis.deselect();\n\t\t\tthis.path.ownerSVGElement.removeChild(this._selectionHittest);\n\t\t\tthis.path.ownerSVGElement.removeChild(this._selection);\n\t\t} else if (!this._selection.parentNode) {\n\t\t\tthis.path.ownerSVGElement.appendChild(this._selectionHittest);\n\t\t\tthis.path.ownerSVGElement.appendChild(this._selection);\n\t\t\tthis.init();\n\t\t\tthis._saveState();\n\t\t}\n\t\tthis._updateAnchors();\n\t\treturn this.update();\n\t}\n\n\tupdate(readPath) {\n\t\tlet d = \"\",\n\t\t\tanchor = this._editingAnchor,\n\t\t\ti, s, x, y;\n\t\tif (readPath) {\n\t\t\tthis.init();\n\t\t}\n\t\tif (anchor) {\n\t\t\ti = anchor.i;\n\t\t\ts = anchor.segment;\n\t\t\tif (i) {\n\t\t\t\tx = s[i-2];\n\t\t\t\ty = s[i-1];\n\t\t\t\tthis._handle1.setAttribute(\"transform\", \"translate(\" + (x) + _comma + (y) + \")\");\n\t\t\t\tthis._line1.setAttribute(\"points\", x + _comma + y + _comma + s[i] + _comma + s[i+1]);\n\t\t\t}\n\t\t\tif (i < s.length - 2) {\n\t\t\t\tx = s[i+2];\n\t\t\t\ty = s[i+3];\n\t\t\t\tthis._handle2.setAttribute(\"transform\", \"translate(\" + (x) + _comma + (y) + \")\");\n\t\t\t\tthis._line2.setAttribute(\"points\", s[i] + _comma + s[i+1] + _comma + x + _comma + y);\n\t\t\t}\n\t\t}\n\n\t\tif (readPath) {\n\t\t\td = this.path.getAttribute(\"d\");\n\t\t} else {\n\t\t\tfor (i = 0; i < this._rawPath.length; i++) {\n\t\t\t\ts = this._rawPath[i];\n\t\t\t\tif (s.length > 7) {\n\t\t\t\t\td += \"M\" + s[0] + _comma + s[1] + \"C\" + s.slice(2).join(_comma);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.path.setAttribute(\"d\", d);\n\t\t\tthis._selectionPath.setAttribute(\"d\", d);\n\t\t\tthis._selectionHittest.setAttribute(\"d\", d);\n\t\t}\n\n\t\tif (this.vars.onUpdate && this._enabled) {\n\t\t\t_callback(\"onUpdate\", this, d);\n\t\t}\n\t\treturn this;\n\t}\n\n\tgetRawPath(applyTransforms, offsetX, offsetY) {\n\t\tif (applyTransforms) {\n\t\t\tlet m = _getConsolidatedMatrix(this.path);\n\t\t\treturn transformRawPath(copyRawPath(this._rawPath), 1, 0, 0, 1, m.e + (offsetX || 0), m.f + (offsetY || 0));\n\t\t}\n\t\treturn this._rawPath;\n\t}\n\n\tgetString(applyTransforms, offsetX, offsetY) {\n\t\tif (applyTransforms) {\n\t\t\tlet m = _getConsolidatedMatrix(this.path);\n\t\t\treturn rawPathToString(transformRawPath(copyRawPath(this._rawPath), 1, 0, 0, 1, m.e + (offsetX || 0), m.f + (offsetY || 0)));\n\t\t}\n\t\treturn this.path.getAttribute(\"d\");\n\t}\n\n\tgetNormalizedSVG(height, originY, shorten, onEaseError) {\n\t\tlet s = this._rawPath[0],\n\t\t\ttx = s[0] * -1,\n\t\t\tty = (originY === 0) ? 0 : -(originY || s[1]),\n\t\t\tl = s.length,\n\t\t\tsx = 1 / (s[l-2] + tx),\n\t\t\tsy = -height || (s[l-1] + ty),\n\t\t\trnd = 1000,\n\t\t\tpoints, i, x1, y1, x2, y2;\n\t\t_temp.length = 0;\n\t\tif (sy) { //typically y ends at 1 (so that the end values are reached)\n\t\t\tsy = 1 / sy;\n\t\t} else { //in case the ease returns to its beginning value, scale everything proportionally\n\t\t\tsy = -sx;\n\t\t}\n\t\tsx *= rnd;\n\t\tsy *= rnd;\n\t\tfor (i = 0; i < l; i += 2) {\n\t\t\t_temp[i] = (((s[i] + tx) * sx) | 0) / rnd;\n\t\t\t_temp[i+1] = (((s[i+1] + ty) * sy) | 0) / rnd;\n\t\t}\n\n\t\tif (onEaseError) {\n\t\t\tpoints = [];\n\t\t\tl = _temp.length;\n\t\t\tfor (i = 2; i < l; i+=6) {\n\t\t\t\tx1 = _temp[i-2];\n\t\t\t\ty1 = _temp[i-1];\n\t\t\t\tx2 = _temp[i+4];\n\t\t\t\ty2 = _temp[i+5];\n\t\t\t\tpoints.push(x1, y1, x2, y2);\n\t\t\t\tbezierToPoints(x1, y1, _temp[i], _temp[i+1], _temp[i+2], _temp[i+3], x2, y2, 0.001, points, points.length - 2);\n\t\t\t}\n\t\t\tx1 = points[0];\n\t\t\tl = points.length;\n\t\t\tfor (i = 2; i < l; i+=2) {\n\t\t\t\tx2 = points[i];\n\t\t\t\tif (x2 < x1 || x2 > 1 || x2 < 0) {\n\t\t\t\t\tonEaseError();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx1 = x2;\n\t\t\t}\n\t\t}\n\n\t\tif (shorten && l === 8 && _temp[0] === 0 && _temp[1] === 0 && _temp[l-2] === 1 && _temp[l-1] === 1) {\n\t\t\treturn _temp.slice(2, 6).join(\",\");\n\t\t}\n\t\t_temp[2] = \"C\" + _temp[2];\n\t\treturn \"M\" + _temp.join(\",\");\n\t}\n\n}\n\n\n\n\n\nPathEditor.simplifyPoints = simplifyPoints;\nPathEditor.pointsToSegment = pointsToSegment;\nPathEditor.simplifySVG = (data, vars) => {  //takes a <path> element or data string and simplifies it according to whatever tolerance you set (default:1, the bigger the number the more variance there can be). vars: {tolerance:1, cornerThreshold:degrees, curved:true}\n\tlet element, points, i, x1, x2, y1, y2, bezier, precision, tolerance, l, cornerThreshold;\n\tvars = vars || {};\n\ttolerance = vars.tolerance || 1;\n\tprecision = vars.precision || (1 / tolerance);\n\tcornerThreshold = (vars.cornerThreshold === undefined ? 18 : +vars.cornerThreshold) * _DEG2RAD;\n\tif (typeof(data) !== \"string\") { //element\n\t\telement = data;\n\t\tdata = element.getAttribute(\"d\");\n\t}\n\tif (data.charAt(0) === \"#\" || data.charAt(0) === \".\") { //selector text\n\t\telement = _doc.querySelector(data);\n\t\tif (element) {\n\t\t\tdata = element.getAttribute(\"d\");\n\t\t}\n\t}\n\tpoints = (vars.curved === false && !/[achqstvz]/ig.test(data)) ? data.match(_numbersExp) : stringToRawPath(data)[0];\n\tif (vars.curved !== false) {\n\t\tbezier = points;\n\t\tpoints = [];\n\t\tl = bezier.length;\n\t\tfor (i = 2; i < l; i+=6) {\n\t\t\tx1 = +bezier[i-2];\n\t\t\ty1 = +bezier[i-1];\n\t\t\tx2 = +bezier[i+4];\n\t\t\ty2 = +bezier[i+5];\n\t\t\tpoints.push(_round(x1), _round(y1), _round(x2), _round(y2));\n\t\t\tbezierToPoints(x1, y1, +bezier[i], +bezier[i+1], +bezier[i+2], +bezier[i+3], x2, y2, 1 / (precision * 200000), points, points.length - 2);\n\t\t}\n\t\tpoints = pointsToSegment(simplifyPoints(points, tolerance), vars.curviness, cornerThreshold);\n\t\tpoints[2] = \"C\" + points[2];\n\t} else {\n\t\tpoints = simplifyPoints(points, tolerance);\n\t}\n\tdata = \"M\" + points.join(\",\");\n\tif (element) {\n\t\telement.setAttribute(\"d\", data);\n\t}\n\treturn data;\n};\n\nPathEditor.create = (target, vars) => new PathEditor(target, vars);\n\nPathEditor.editingAxis = _editingAxis;\n\nPathEditor.getSnapFunction = (vars) => { //{gridSize, radius, x, y, width, height}\n\tlet r = vars.radius || 2,\n\t\tbig = 1e20,\n\t\tminX = (vars.x || vars.x === 0) ? vars.x : vars.width ? 0 : -big,\n\t\tminY = (vars.y || vars.y === 0) ? vars.y : vars.height ? 0 : -big,\n\t\tmaxX = minX + (vars.width || big*big),\n\t\tmaxY = minY + (vars.height || big*big),\n\t\tcontainX = (vars.containX !== false),\n\t\tcontainY = (vars.containY !== false),\n\t\taxis = vars.axis,\n\t\tgrid = vars.gridSize;\n\tr *= r;\n\treturn p => {\n\t\tlet x = p.x,\n\t\t\ty = p.y,\n\t\t\tgridX, gridY, dx, dy;\n\t\tif ((containX && x < minX) || (dx = x - minX) * dx < r) {\n\t\t\tx = minX;\n\t\t} else if ((containX && x > maxX) || (dx = maxX - x) * dx < r) {\n\t\t\tx = maxX;\n\t\t}\n\t\tif ((containY && y < minY) || (dy = y - minY) * dy < r) {\n\t\t\ty = minY;\n\t\t} else if ((containY && y > maxY) || (dy = maxY - y) * dy < r) {\n\t\t\ty = maxY;\n\t\t}\n\t\tif (axis) {\n\t\t\tdx = x - axis.x;\n\t\t\tdy = y - axis.y;\n\t\t\tif (dx * dx < r) {\n\t\t\t\tx = axis.x;\n\t\t\t}\n\t\t\tif (dy * dy < r) {\n\t\t\t\ty = axis.y;\n\t\t\t}\n\t\t}\n\t\tif (grid) {\n\t\t\tgridX = minX + Math.round((x - minX) / grid) * grid; //closest grid slot on x-axis\n\t\t\tdx = gridX - x;\n\t\t\tgridY = minY + Math.round((y - minY) / grid) * grid; //closest grid slot on y-axis\n\t\t\tdy = gridY - y;\n\t\t\tif (dx * dx + dy * dy < r) {\n\t\t\t\tx = gridX;\n\t\t\t\ty = gridY;\n\t\t\t}\n\t\t}\n\t\tp.x = x;\n\t\tp.y = y;\n\t};\n};\n\nPathEditor.version = \"3.0.0\";\n\nexport { PathEditor as default };","/*!\n * MotionPathHelper 3.0.0\n * https://greensock.com\n *\n * @license Copyright 2008-2019, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport PathEditor from \"./utils/PathEditor.js\";\n\nlet gsap, _win, _doc, _docEl, MotionPathPlugin,  _arrayToRawPath, _rawPathToString,\n\t_bonusValidated = 1, //<name>MotionPathHelper</name>\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_isString = value => typeof(value) === \"string\",\n\t_createElement = (type, ns) => {\n\t\tlet e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n\t\treturn e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://greensock.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n\t},\n\t_getPositionOnPage = target => {\n\t\tlet bounds = target.getBoundingClientRect(),\n\t\t\twindowOffsetY = _docEl.clientTop - (_win.pageYOffset || _docEl.scrollTop || document.body.scrollTop || 0),\n\t\t\twindowOffsetX = _docEl.clientLeft - (_win.pageXOffset || _docEl.scrollLeft || document.body.scrollLeft || 0);\n\t\treturn {left:bounds.left + windowOffsetX, top:bounds.top + windowOffsetY, right: bounds.right + windowOffsetX, bottom: bounds.bottom + windowOffsetY};\n\t},\n\t_getInitialPath = (x, y) => {\n\t\tlet coordinates = [0,31,8,58,24,75,40,90,69,100,100,100],\n\t\t\ti;\n\t\tfor (i = 0; i < coordinates.length; i+=2) {\n\t\t\tcoordinates[i] += x;\n\t\t\tcoordinates[i+1] += y;\n\t\t}\n\t\treturn \"M\" + x + \",\" + y + \"C\" + coordinates.join(\",\");\n\t},\n\t_getGlobalTime = animation => {\n\t\tlet time = animation.totalTime();\n\t\twhile (animation) {\n\t\t\ttime = animation.startTime() + time / (animation.timeScale() || 1);\n\t\t\tanimation = animation.parent;\n\t\t}\n\t\treturn time;\n\t},\n\t_copyElement,\n\t_initCopyToClipboard = () => {\n\t\t_copyElement = _createElement(\"textarea\");\n\t\t_copyElement.style.display = \"none\";\n\t\t_doc.body.appendChild(_copyElement);\n\t},\n\t_parsePath = (path, target, vars) => (_isString(path) && _selectorExp.test(path)) ? _doc.querySelector(path) : Array.isArray(path) ? _rawPathToString(_arrayToRawPath([{x:gsap.getProperty(target, \"x\"), y:gsap.getProperty(target, \"y\")}, ...path], vars)) : (_isString(path) || path && (path.tagName + \"\").toLowerCase() === \"path\") ? path : 0,\n\t_addCopyToClipboard = (target, getter, onComplete) => {\n\t\ttarget.addEventListener('click', e => {\n\t\t\tif (e.target._gsHelper) {\n\t\t\t\tlet c = getter(e.target);\n\t\t\t\t_copyElement.value = c;\n\t\t\t\tif (c && _copyElement.select) {\n\t\t\t\t\tconsole.log(c);\n\t\t\t\t\t_copyElement.style.display = \"block\";\n\t\t\t\t\t_copyElement.select();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdocument.execCommand('copy');\n\t\t\t\t\t\t_copyElement.blur();\n\t\t\t\t\t\tif (onComplete) {\n\t\t\t\t\t\t\tonComplete(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.warn(\"Copy didn't work; this browser doesn't permit that.\");\n\t\t\t\t\t}\n\t\t\t\t\t_copyElement.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_identityMatrixObject = {matrix:{a:1, b:0, c:0, d:1, e:0, f:0}},\n\t_getConsolidatedMatrix = target => (target.transform.baseVal.consolidate() || _identityMatrixObject).matrix,\n\t_findMotionPathTween = target => {\n\t\tlet tweens = gsap.getTweensOf(target),\n\t\t\ti = 0;\n\t\tfor (; i < tweens.length; i++) {\n\t\t\tif (tweens[i].vars.motionPath) {\n\t\t\t\treturn tweens[i];\n\t\t\t} else if (tweens[i].timeline) {\n\t\t\t\ttweens.push(...tweens[i].timeline.getChildren());\n\t\t\t}\n\t\t}\n\t},\n\t_initCore = (core, required) => {\n\t\tlet message = \"Please gsap.registerPlugin(MotionPathPlugin)\";\n\t\t_win = window;\n\t\tgsap = gsap || core || _win.gsap || console.warn(message);\n\t\t_doc = document;\n\t\t_docEl = _doc.documentElement;\n\t\tMotionPathPlugin = gsap && gsap.plugins.motionPath;\n\t\tif (!MotionPathPlugin) {\n\t\t\t(required === true) && console.warn(message);\n\t\t} else {\n\t\t\t_initCopyToClipboard();\n\t\t\t_arrayToRawPath = MotionPathPlugin.arrayToRawPath;\n\t\t\t_rawPathToString = MotionPathPlugin.rawPathToString;\n\t\t}\n\t};\n\nexport class MotionPathHelper {\n\n\tconstructor(targetOrTween, vars = {}) {\n\t\tif (!MotionPathPlugin) {\n\t\t\t_initCore(vars.gsap, 1);\n\t\t}\n\t\tlet copyButton = _createElement(\"div\"),\n\t\t\tself = this,\n\t\t\toffset = {x:0, y:0},\n\t\t\ttarget, path, isSVG, startX, startY, position, svg, animation, svgNamespace, temp, matrix, refreshPath, animationToScrub;\n\t\tif (targetOrTween instanceof gsap.core.Tween) {\n\t\t\tanimation = targetOrTween;\n\t\t\ttarget = animation.targets()[0];\n\t\t} else {\n\t\t\ttarget = gsap.utils.toArray(targetOrTween)[0];\n\t\t\tanimation = _findMotionPathTween(target);\n\t\t}\n\t\tpath = _parsePath(vars.path, target, vars);\n\t\tthis.offset = offset;\n\t\tposition = _getPositionOnPage(target);\n\t\tstartX = parseFloat(gsap.getProperty(target, \"x\", \"px\"));\n\t\tstartY = parseFloat(gsap.getProperty(target, \"y\", \"px\"));\n\t\tisSVG = (target.getCTM && target.tagName.toLowerCase() !== \"svg\");\n\t\tif (animation && !path) {\n\t\t\tpath = _parsePath(animation.vars.motionPath.path || animation.vars.motionPath, target, animation.vars.motionPath);\n\t\t}\n\t\tcopyButton.style.cssText = \"border-radius:8px; background-color:rgba(85, 85, 85, 0.7); color:#fff; cursor:pointer; padding:6px 12px; font-family:Signika Negative, Arial, sans-serif; position:fixed; left:50%; transform:translate(-50%, 0); font-size:19px; bottom:10px\";\n\t\tcopyButton.innerText = \"COPY MOTION PATH\";\n\t\tcopyButton._gsHelper = self;\n\t\t_doc.body.appendChild(copyButton);\n\t\t_addCopyToClipboard(copyButton, () => self.getString(), () => gsap.fromTo(copyButton, {backgroundColor:\"white\"}, {duration:0.5, backgroundColor:\"rgba(85, 85, 85, 0.6)\"}));\n\t\tsvg = path && path.ownerSVGElement;\n\t\tif (!svg) {\n\t\t\tsvgNamespace = (isSVG && target.ownerSVGElement && target.ownerSVGElement.getAttribute(\"xmlns\")) || \"http://www.w3.org/2000/svg\";\n\t\t\tif (isSVG) {\n\t\t\t\tsvg = target.ownerSVGElement;\n\t\t\t\ttemp = target.getBBox();\n\t\t\t\tmatrix = _getConsolidatedMatrix(target);\n\t\t\t\tstartX = matrix.e;\n\t\t\t\tstartY = matrix.f;\n\t\t\t\toffset.x = temp.x;\n\t\t\t\toffset.y = temp.y;\n\t\t\t} else {\n\t\t\t\tsvg = _createElement(\"svg\", svgNamespace);\n\t\t\t\t_doc.body.appendChild(svg);\n\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 100 100\");\n\t\t\t\tsvg.style.cssText = \"overflow:visible; background-color: transparent; position:absolute; width:100px; height:100px; top:\" + position.top + \"px; left:\" + position.left + \"px;\";\n\t\t\t}\n\t\t\ttemp = _isString(path) && !_selectorExp.test(path) ? path : _getInitialPath(startX, startY);\n\t\t\tpath = _createElement(\"path\", svgNamespace);\n\t\t\tpath.setAttribute(\"d\", temp);\n\t\t\tpath.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n\t\t\tpath.style.cssText = \"fill:transparent; stroke-width:\" + (vars.pathWidth || 3) + \"; stroke:\" + (vars.pathColor || \"#555\") + \"; opacity:\" + (vars.pathOpacity || 0.6);\n\t\t\tsvg.appendChild(path);\n\t\t\tif (offset.x || offset.y) {\n\t\t\t\tgsap.set(path, {x:offset.x, y:offset.y});\n\t\t\t}\n\t\t}\n\n\t\tif (!(\"selected\" in vars)) {\n\t\t\tvars.selected = true;\n\t\t}\n\t\tif (!(\"anchorSnap\" in vars)) {\n\t\t\tvars.anchorSnap = p => {\n\t\t\t\tif (p.x * p.x + p.y * p.y < 16) {\n\t\t\t\t\tp.x = p.y = 0;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tanimationToScrub = animation && animation.parent.data === \"nested\" ? animation.parent.parent : animation;\n\n\t\tvars.onPress = () => {\n\t\t\tanimationToScrub.pause(0);\n\t\t};\n\n\t\trefreshPath = () => {\n\t\t\tlet m = _getConsolidatedMatrix(path);\n\t\t\tanimation.vars.motionPath.offsetX = m.e - offset.x;\n\t\t\tanimation.vars.motionPath.offsetY = m.f - offset.y;\n\t\t\tanimation.invalidate();\n\t\t\tanimationToScrub.restart();\n\t\t};\n\t\tvars.onRelease = vars.onDeleteAnchor = refreshPath;\n\n\t\tthis.editor = PathEditor.create(path, vars);\n\t\tif (vars.center) {\n\t\t\tgsap.set(target, {transformOrigin:\"50% 50%\", xPercent:-50, yPercent:-50});\n\t\t}\n\t\tif (animation) {\n\t\t\tif (animation.vars.motionPath.path) {\n\t\t\t\tanimation.vars.motionPath.path = path;\n\t\t\t} else {\n\t\t\t\tanimation.vars.motionPath = {path:path};\n\t\t\t}\n\t\t\tif (animationToScrub.parent !== gsap.globalTimeline) {\n\t\t\t\tgsap.globalTimeline.add(animationToScrub, _getGlobalTime(animationToScrub) - animationToScrub.delay());\n\t\t\t}\n\t\t\tanimationToScrub.repeat(-1).repeatDelay(1);\n\n\t\t} else {\n\t\t\tanimation = animationToScrub = gsap.to(target, {\n\t\t\t\tmotionPath: {\n\t\t\t\t\tpath:path,\n\t\t\t\t\tstart: vars.start || 0,\n\t\t\t\t\tend: (\"end\" in vars) ? vars.end : 1,\n\t\t\t\t\tautoRotate: (\"autoRotate\" in vars) ? vars.autoRotate : false\n\t\t\t\t\t//align: path\n\t\t\t\t},\n\t\t\t\tduration: vars.duration || 5,\n\t\t\t\tease: vars.ease || \"Power1.easeInOut\",\n\t\t\t\trepeat:-1,\n\t\t\t\trepeatDelay:1,\n\t\t\t\tpaused:!vars.path\n\t\t\t});\n\t\t}\n\t\tthis.animation = animation;\n\t}\n\n\tgetString() {\n\t\treturn this.editor.getString(true, -this.offset.x, -this.offset.y);\n\t}\n\n}\n\nMotionPathHelper.register = _initCore;\nMotionPathHelper.create = (target, vars) => new MotionPathHelper(target, vars);\nMotionPathHelper.version = \"3.0.0\";\n\nexport { MotionPathHelper as default };"],"names":["_wrapProgress","value","_copyMetaData","source","copy","totalLength","samples","slice","lookup","minLength","resolution","totalPoints","_bestDistance","_svgPathExp","_numbersExp","_DEG2RAD","Math","PI","_sin","sin","_cos","cos","_abs","abs","_sqrt","sqrt","_atan2","atan2","_largeNum","copyRawPath","rawPath","a","i","length","transformRawPath","b","c","d","tx","ty","segment","l","x","y","j","_dirty","arcToSegment","lastX","lastY","rx","ry","angle","largeArcFlag","sweepFlag","angleRad","cosAngle","sinAngle","TWOPI","dx2","dy2","x1","y1","x1_sq","y1_sq","radiiCheck","rx_sq","ry_sq","sq","coef","cx1","cy1","cx","cy","ux","uy","vx","vy","temp","angleStart","acos","angleExtent","isNaN","segments","ceil","angleIncrement","controlLength","ma","mb","mc","md","push","stringToRawPath","line","sx","sy","ex","ey","difX","difY","command","isRelative","startX","startY","beziers","prevCommand","replace","_scientific","m","n","match","path","relativeX","relativeY","elements","points","errorMessage","console","log","toUpperCase","closed","pop","bezierToPoints","x2","y2","x3","y3","x4","y4","threshold","index","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","dx","dy","d2","d3","splice","pointsToSegment","curviness","cornerThreshold","prevX","prevY","slope","dx1","dx3","dy1","dy3","d1","nextX","nextY","_round","simplifyPoints","tolerance","result","last","parseFloat","simplifyStep","first","simplified","t","maxSqDist","firstX","firstY","getClosestProgressOnBezier","iterations","px","py","start","end","slices","x0","y0","inv","inc","best","max","min","_svgOwner","element","ownerSVGElement","tagName","toLowerCase","_createSibling","parentNode","_doc","_setDoc","doc","ownerDocument","_transformProp","style","_transformOriginProp","_win","window","svg","ns","getAttribute","type","css","e","createElementNS","createElement","_svgContainer","setAttribute","appendChild","_divContainer","cssText","_setMatrix","f","_svgTemps","_divTemps","Matrix2D","inverse","this","determinant","multiply","matrix","a2","b2","c2","e2","f2","equals","apply","point","decoratee","getGlobalMatrix","temps","container","_placeSiblings","isRootSVG","siblings","getBBox","transform","baseVal","consolidate","top","offsetTop","left","offsetLeft","getComputedStyle","b1","getBoundingClientRect","b3","parent","removeChild","_createSVG","attributes","p","reg","undefined","setAttributeNS","_getConsolidatedMatrix","target","_identityMatrixObject","_checkDeselect","_gsSelection","_isPressed","_getTime","_lastInteraction","_selectedPaths","deselect","_addListener","func","capture","addEventListener","touchType","_touchEventLookup","passive","substr","attachEvent","_removeListener","removeEventListener","detachEvent","_onMultiTouchDocumentEnd","_isMultiTouching","touches","_dragCount","_onMultiTouchDocument","_bind","scope","call","_callback","self","param","callback","vars","callbackScope","_initCore","document","_tempDiv","_createElement","types","standard","split","converted","onpointerdown","onmspointerdown","obj","SVGElement","prototype","getTransformToElement","getScreenCTM","state","key","which","_SHIFT","_CTRL","_CMD","_ALT","_onPressAlt","_history","shift","init","_anchors","selectedIndexes","indexOf","_selectedAnchors","_updateAnchors","update","onUndo","_deleteSelectedAnchors","select","_onReleaseAlt","_coreInitted","_onPress","touchEventTarget","ctm","_matrix","getItem","_ctm","currentTarget","_onRelease","_onMove","preventDefault","preventManipulation","changedTouches","touch","touchID","identifier","pointerId","_startPointerY","pointerY","pageY","_startPointerX","pointerX","pageX","_startElementX","_startElementY","isPressed","onPress","pointerEvent","originalEvent","_enabled","setPointerPosition","onDrag","force","_hasTouchID","list","ID","_interacted","wasDragging","isDragging","onClick","onDragRelease","onRelease","onDragEnd","_createSegmentAnchors","editor","Anchor","_getLength","i2","_recentlyAddedAnchor","_selectionColor","Date","now","getTime","_editingAxis","_point","_temp","_comma","DraggableSVG","xChange","yChange","snap","enabled","arguments","_onClick","dragging","endDrag","querySelectorAll","maxX","minX","_bounds","s","_draggable","prevSmooth","smooth","_circleHandle","_squareHandle","_selection","fill","stroke","strokeWidth","vectorEffect","PathEditor","anchor","_editingAnchor","pathData","createAnchors","_rawPath","anchorVars","anchorSnap","_onDragAnchor","_onPressAnchor","_onClickAnchor","_onDragEndAnchor","concat","_handle1","_handle2","_selectionPath","_selectionHittest","_saveState","_addHistory","pathEditor","unshift","_onClickSelectionPath","visibility","altKey","newIndex","closestData","clientX","clientY","getClosestData","closest","bestDistance","subdivideSegment","ax","ay","cp1x","cp1y","cp2x","cp2y","x1a","y1a","x2a","y2a","_onClickHandle1","_onClickHandle2","isSelected","allAnchors","_onDragPath","anchors","onDeleteAnchor","angle1","angle2","length1","length2","rnd","isEnd","_line1","_line2","_onPressHandle1","_oppositeHandleLength","_onPressHandle2","_onReleaseHandle","_onDragHandle1","_onDragHandle2","changeX","changeY","readPath","join","onUpdate","getRawPath","applyTransforms","offsetX","offsetY","getString","rawPathToString","_isNumber","sl","getNormalizedSVG","height","originY","shorten","onEaseError","pointerEvents","size","handleSize","_getSquarePathData","_getCirclePathData","rcirc","handleSnap","selectionItems","draggable","selected","simplifySVG","data","bezier","precision","charAt","querySelector","curved","test","create","editingAxis","getSnapFunction","r","radius","big","width","minY","maxY","containX","containY","axis","grid","gridSize","gridX","gridY","round","version","_isString","_parsePath","_selectorExp","Array","isArray","_rawPathToString","_arrayToRawPath","gsap","getProperty","core","required","message","warn","_docEl","documentElement","MotionPathPlugin","plugins","motionPath","_initCopyToClipboard","_copyElement","display","body","arrayToRawPath","_bonusValidated","MotionPathHelper","offset","targetOrTween","isSVG","position","animation","svgNamespace","refreshPath","animationToScrub","copyButton","Tween","targets","utils","toArray","_findMotionPathTween","tweens","getTweensOf","timeline","getChildren","_getPositionOnPage","bounds","windowOffsetY","clientTop","pageYOffset","scrollTop","windowOffsetX","clientLeft","pageXOffset","scrollLeft","right","bottom","getCTM","innerText","_gsHelper","_addCopyToClipboard","getter","onComplete","execCommand","blur","err","fromTo","backgroundColor","duration","_getInitialPath","coordinates","pathWidth","pathColor","pathOpacity","set","pause","invalidate","restart","center","transformOrigin","xPercent","yPercent","globalTimeline","add","_getGlobalTime","time","totalTime","startTime","timeScale","delay","repeat","repeatDelay","to","autoRotate","ease","paused","register"],"mappings":"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"}